Grammar

    0 $accept: program $end

    1 program: program_decl main_body DOT

    2 program_decl: KW_PROGRAM IDENT SEMICLN

    3 main_body: KW_BEGIN statements KW_END
    4          | body_decl KW_BEGIN statements KW_END
    5          | KW_BEGIN statements KW_END body_decl
    6          | body_decl KW_BEGIN statements KW_END body_decl

    7 body_decl: body_d
    8          | body_decl body_d

    9 body_d: type_decl_section
   10       | var_decl_section
   11       | profunc SEMICLN

   12 statements: %empty
   13           | statement_list

   14 statement_list: statement
   15               | statement_list SEMICLN statement

   16 statement: statement_cont
   17          | if_statement
   18          | while_statement
   19          | for_statement
   20          | repeat_statement
   21          | label_statement
   22          | goto_statement

   23 profunc_call: IDENT L_PARENTH arguments R_PARENTH

   24 if_statement: KW_IF expression KW_THEN statement_cont
   25             | if_statement else_statement

   26 else_statement: KW_ELSE statement_cont
   27               | KW_ELSE KW_IF expression KW_THEN statement_cont

   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont

   30 while_statement: KW_WHILE expression KW_DO statement_cont

   31 repeat_statement: KW_REPEAT statement_cont KW_UNTIL expression

   32 label_statement: IDENT CLN statement_cont

   33 goto_statement: KW_GOTO IDENT

   34 statement_cont: KW_RETURN
   35               | KW_RETURN expression
   36               | KW_RESULT ASSIGN expression
   37               | KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | IDENT ASSIGN expression
   39               | IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | IDENT table_exp ASSIGN expression
   41               | KW_RESULT OP_PLUS ASSIGN expression
   42               | KW_RESULT OP_MINUS ASSIGN expression
   43               | IDENT OP_PLUS ASSIGN expression
   44               | IDENT OP_MINUS ASSIGN expression
   45               | IDENT table_exp OP_PLUS ASSIGN expression
   46               | IDENT table_exp OP_MINUS ASSIGN expression
   47               | KW_BREAK
   48               | KW_CONTINUE
   49               | profunc_call
   50               | KW_BEGIN statement_list KW_END

   51 arguments: %empty
   52          | arglist
   53          | var_type

   54 arglist: expression
   55        | arglist COMMA expression

   56 expression: POSINT
   57           | REAL
   58           | IDENT
   59           | IDENT table_exp
   60           | KW_RESULT
   61           | profunc_call
   62           | expression EXCL_MARK expression
   63           | expression KW_NOT expression
   64           | L_PARENTH expression R_PARENTH
   65           | expression OP_MULT expression
   66           | expression OP_DIV expression
   67           | expression KW_DIV expression
   68           | expression KW_MOD expression
   69           | OP_PLUS expression
   70           | OP_MINUS expression
   71           | expression OP_PLUS expression
   72           | expression OP_MINUS expression
   73           | expression EQ expression
   74           | expression CMPR_DIFF expression
   75           | expression CMPR_LESS expression
   76           | expression CMPR_LESSEQ expression
   77           | expression CMPR_GRTR expression
   78           | expression CMPR_GRTREQ expression
   79           | expression KW_AND expression
   80           | expression OP_AND expression
   81           | expression KW_OR expression
   82           | expression OP_OR expression
   83           | BOOL_FALSE
   84           | BOOL_TRUE
   85           | STRING

   86 table_exp: L_HOOK expression R_HOOK
   87          | table_exp L_HOOK expression R_HOOK

   88 var_decl_section: KW_VAR var_decl
   89                 | var_decl_section var_decl

   90 var_decl: ident_list CLN var_type SEMICLN
   91         | ident_list CLN var_type_complex SEMICLN
   92         | ident_list CLN KW_ARRAY hooks KW_OF var_type SEMICLN
   93         | ident_list CLN IDENT SEMICLN

   94 var_type: KW_INT
   95         | KW_BOOLEAN
   96         | KW_CHAR
   97         | KW_REAL

   98 var_type_complex: KW_ARRAY KW_OF var_type

   99 hooks: L_HOOK POSINT R_HOOK
  100      | hooks L_HOOK POSINT R_HOOK

  101 type_decl_section: KW_TYPE type_decl SEMICLN
  102                  | type_decl_section type_decl SEMICLN

  103 type_decl: ident_list EQ var_type
  104          | ident_list EQ var_type_complex
  105          | ident_list EQ KW_FUNCTION L_PARENTH profunc_head_var R_PARENTH CLN var_type

  106 ident_list: IDENT
  107           | ident_list COMMA IDENT

  108 profunc: profunc_head_pro SEMICLN
  109        | profunc_head_func SEMICLN
  110        | profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  111        | profunc_head_func SEMICLN KW_BEGIN statements KW_END
  112        | profunc_head_pro SEMICLN body_decl
  113        | profunc_head_func SEMICLN body_decl
  114        | profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  115        | profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END

  116 profunc_head_pro: KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH

  117 profunc_head_func: KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

  119 profunc_head_var: %empty
  120                 | profunc_head_var_list

  121 profunc_head_var_list: profunc_head_var_one
  122                      | profunc_head_var_one SEMICLN profunc_head_var_list

  123 profunc_head_var_one: IDENT CLN var_type
  124                     | IDENT CLN var_type_complex
  125                     | IDENT COMMA IDENT CLN var_type
  126                     | IDENT COMMA IDENT CLN var_type_complex
  127                     | IDENT CLN IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 2 23 28 29 32 33 38 39 40 43 44 45 46 58 59 93 106 107
    116 117 118 123 124 125 126 127
POSINT (259) 56 99 100
REAL (260) 57
STRING (261) 85
ASSIGN (262) 28 29 36 37 38 39 40 41 42 43 44 45 46
KW_ELSE (263) 26 27
KW_FOR (264) 28 29
KW_FUNCTION (265) 105 117 118
KW_GOTO (266) 33
KW_IF (267) 24 27
KW_NOT (268) 63
KW_VAR (269) 88
KW_OF (270) 92 98
KW_OR (271) 81
KW_WHILE (272) 30
KW_PROCEDURE (273) 116
KW_REPEAT (274) 31
KW_TO (275) 28
KW_RESULT (276) 36 37 41 42 60
KW_RETURN (277) 34 35
KW_THEN (278) 24 27
KW_UNTIL (279) 31
KW_DOWNTO (280) 29
KW_TYPE (281) 101
OP_PLUS (282) 41 43 45 69 71
OP_MINUS (283) 42 44 46 70 72
OP_MULT (284) 65
OP_DIV (285) 66
KW_MOD (286) 68
KW_DIV (287) 67
KW_BREAK (288) 47
KW_CONTINUE (289) 48
KW_INT (290) 94
KW_REAL (291) 97
SEMICLN (292) 2 11 15 90 91 92 93 101 102 108 109 110 111 112 113 114
    115 122
CLN (293) 32 90 91 92 93 105 117 118 123 124 125 126 127
EQ (294) 73 103 104 105
DOT (295) 1
COMMA (296) 55 107 125 126
L_HOOK (297) 86 87 99 100
R_HOOK (298) 86 87 99 100
L_PARENTH (299) 23 37 39 64 105 116 117 118
R_PARENTH (300) 23 37 39 64 105 116 117 118
EXCL_MARK (301) 62
CMPR_LESS (302) 75
CMPR_LESSEQ (303) 76
CMPR_GRTR (304) 77
CMPR_GRTREQ (305) 78
CMPR_DIFF (306) 74
OP_AND (307) 80
OP_OR (308) 82
BOOL_TRUE (309) 84
BOOL_FALSE (310) 83
KW_DO (311) 28 29 30
KW_CHAR (312) 96
KW_PROGRAM (313) 2
KW_BEGIN (314) 3 4 5 6 50 110 111 114 115
KW_END (315) 3 4 5 6 50 110 111 114 115
KW_AND (316) 79
KW_ARRAY (317) 92 98
KW_BOOLEAN (318) 95


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 1, on right: 0
program_decl (66)
    on left: 2, on right: 1
main_body (67)
    on left: 3 4 5 6, on right: 1
body_decl (68)
    on left: 7 8, on right: 4 5 6 8 112 113 114 115
body_d (69)
    on left: 9 10 11, on right: 7 8
statements (70)
    on left: 12 13, on right: 3 4 5 6 110 111 114 115
statement_list (71)
    on left: 14 15, on right: 13 15 50
statement (72)
    on left: 16 17 18 19 20 21 22, on right: 14 15
profunc_call (73)
    on left: 23, on right: 49 61
if_statement (74)
    on left: 24 25, on right: 17 25
else_statement (75)
    on left: 26 27, on right: 25
for_statement (76)
    on left: 28 29, on right: 19
while_statement (77)
    on left: 30, on right: 18
repeat_statement (78)
    on left: 31, on right: 20
label_statement (79)
    on left: 32, on right: 21
goto_statement (80)
    on left: 33, on right: 22
statement_cont (81)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50, on right:
    16 24 26 27 28 29 30 31 32
arguments (82)
    on left: 51 52 53, on right: 23
arglist (83)
    on left: 54 55, on right: 52 55
expression (84)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
    74 75 76 77 78 79 80 81 82 83 84 85, on right: 24 27 28 29 30 31
    35 36 37 38 39 40 41 42 43 44 45 46 54 55 62 63 64 65 66 67 68
    69 70 71 72 73 74 75 76 77 78 79 80 81 82 86 87
table_exp (85)
    on left: 86 87, on right: 40 45 46 59 87
var_decl_section (86)
    on left: 88 89, on right: 10 89
var_decl (87)
    on left: 90 91 92 93, on right: 88 89
var_type (88)
    on left: 94 95 96 97, on right: 37 39 53 90 92 98 103 105 117 123
    125
var_type_complex (89)
    on left: 98, on right: 91 104 118 124 126
hooks (90)
    on left: 99 100, on right: 92 100
type_decl_section (91)
    on left: 101 102, on right: 9 102
type_decl (92)
    on left: 103 104 105, on right: 101 102
ident_list (93)
    on left: 106 107, on right: 90 91 92 93 103 104 105 107
profunc (94)
    on left: 108 109 110 111 112 113 114 115, on right: 11
profunc_head_pro (95)
    on left: 116, on right: 108 110 112 114
profunc_head_func (96)
    on left: 117 118, on right: 109 111 113 115
profunc_head_var (97)
    on left: 119 120, on right: 105 116 117 118
profunc_head_var_list (98)
    on left: 121 122, on right: 120 122
profunc_head_var_one (99)
    on left: 123 124 125 126 127, on right: 121 122


State 0

    0 $accept: . program $end
    1 program: . program_decl main_body DOT
    2 program_decl: . KW_PROGRAM IDENT SEMICLN

    KW_PROGRAM  shift, and go to state 1

    program       go to state 2
    program_decl  go to state 3


State 1

    2 program_decl: KW_PROGRAM . IDENT SEMICLN

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: program_decl . main_body DOT
    3 main_body: . KW_BEGIN statements KW_END
    4          | . body_decl KW_BEGIN statements KW_END
    5          | . KW_BEGIN statements KW_END body_decl
    6          | . body_decl KW_BEGIN statements KW_END body_decl
    7 body_decl: . body_d
    8          | . body_decl body_d
    9 body_d: . type_decl_section
   10       | . var_decl_section
   11       | . profunc SEMICLN
   88 var_decl_section: . KW_VAR var_decl
   89                 | . var_decl_section var_decl
  101 type_decl_section: . KW_TYPE type_decl SEMICLN
  102                  | . type_decl_section type_decl SEMICLN
  108 profunc: . profunc_head_pro SEMICLN
  109        | . profunc_head_func SEMICLN
  110        | . profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  111        | . profunc_head_func SEMICLN KW_BEGIN statements KW_END
  112        | . profunc_head_pro SEMICLN body_decl
  113        | . profunc_head_func SEMICLN body_decl
  114        | . profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  115        | . profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END
  116 profunc_head_pro: . KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH
  117 profunc_head_func: . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    KW_FUNCTION   shift, and go to state 6
    KW_VAR        shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_TYPE       shift, and go to state 9
    KW_BEGIN      shift, and go to state 10

    main_body          go to state 11
    body_decl          go to state 12
    body_d             go to state 13
    var_decl_section   go to state 14
    type_decl_section  go to state 15
    profunc            go to state 16
    profunc_head_pro   go to state 17
    profunc_head_func  go to state 18


State 4

    2 program_decl: KW_PROGRAM IDENT . SEMICLN

    SEMICLN  shift, and go to state 19


State 5

    0 $accept: program $end .

    $default  accept


State 6

  117 profunc_head_func: KW_FUNCTION . IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | KW_FUNCTION . IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    IDENT  shift, and go to state 20


State 7

   88 var_decl_section: KW_VAR . var_decl
   90 var_decl: . ident_list CLN var_type SEMICLN
   91         | . ident_list CLN var_type_complex SEMICLN
   92         | . ident_list CLN KW_ARRAY hooks KW_OF var_type SEMICLN
   93         | . ident_list CLN IDENT SEMICLN
  106 ident_list: . IDENT
  107           | . ident_list COMMA IDENT

    IDENT  shift, and go to state 21

    var_decl    go to state 22
    ident_list  go to state 23


State 8

  116 profunc_head_pro: KW_PROCEDURE . IDENT L_PARENTH profunc_head_var R_PARENTH

    IDENT  shift, and go to state 24


State 9

  101 type_decl_section: KW_TYPE . type_decl SEMICLN
  103 type_decl: . ident_list EQ var_type
  104          | . ident_list EQ var_type_complex
  105          | . ident_list EQ KW_FUNCTION L_PARENTH profunc_head_var R_PARENTH CLN var_type
  106 ident_list: . IDENT
  107           | . ident_list COMMA IDENT

    IDENT  shift, and go to state 21

    type_decl   go to state 25
    ident_list  go to state 26


State 10

    3 main_body: KW_BEGIN . statements KW_END
    5          | KW_BEGIN . statements KW_END body_decl
   12 statements: . %empty  [KW_END]
   13           | . statement_list
   14 statement_list: . statement
   15               | . statement_list SEMICLN statement
   16 statement: . statement_cont
   17          | . if_statement
   18          | . while_statement
   19          | . for_statement
   20          | . repeat_statement
   21          | . label_statement
   22          | . goto_statement
   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   24 if_statement: . KW_IF expression KW_THEN statement_cont
   25             | . if_statement else_statement
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont
   30 while_statement: . KW_WHILE expression KW_DO statement_cont
   31 repeat_statement: . KW_REPEAT statement_cont KW_UNTIL expression
   32 label_statement: . IDENT CLN statement_cont
   33 goto_statement: . KW_GOTO IDENT
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_GOTO      shift, and go to state 29
    KW_IF        shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_REPEAT    shift, and go to state 32
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    $default  reduce using rule 12 (statements)

    statements        go to state 38
    statement_list    go to state 39
    statement         go to state 40
    profunc_call      go to state 41
    if_statement      go to state 42
    for_statement     go to state 43
    while_statement   go to state 44
    repeat_statement  go to state 45
    label_statement   go to state 46
    goto_statement    go to state 47
    statement_cont    go to state 48


State 11

    1 program: program_decl main_body . DOT

    DOT  shift, and go to state 49


State 12

    4 main_body: body_decl . KW_BEGIN statements KW_END
    6          | body_decl . KW_BEGIN statements KW_END body_decl
    8 body_decl: body_decl . body_d
    9 body_d: . type_decl_section
   10       | . var_decl_section
   11       | . profunc SEMICLN
   88 var_decl_section: . KW_VAR var_decl
   89                 | . var_decl_section var_decl
  101 type_decl_section: . KW_TYPE type_decl SEMICLN
  102                  | . type_decl_section type_decl SEMICLN
  108 profunc: . profunc_head_pro SEMICLN
  109        | . profunc_head_func SEMICLN
  110        | . profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  111        | . profunc_head_func SEMICLN KW_BEGIN statements KW_END
  112        | . profunc_head_pro SEMICLN body_decl
  113        | . profunc_head_func SEMICLN body_decl
  114        | . profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  115        | . profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END
  116 profunc_head_pro: . KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH
  117 profunc_head_func: . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    KW_FUNCTION   shift, and go to state 6
    KW_VAR        shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_TYPE       shift, and go to state 9
    KW_BEGIN      shift, and go to state 50

    body_d             go to state 51
    var_decl_section   go to state 14
    type_decl_section  go to state 15
    profunc            go to state 16
    profunc_head_pro   go to state 17
    profunc_head_func  go to state 18


State 13

    7 body_decl: body_d .

    $default  reduce using rule 7 (body_decl)


State 14

   10 body_d: var_decl_section .  [KW_FUNCTION, KW_VAR, KW_PROCEDURE, KW_TYPE, SEMICLN, DOT, KW_BEGIN]
   89 var_decl_section: var_decl_section . var_decl
   90 var_decl: . ident_list CLN var_type SEMICLN
   91         | . ident_list CLN var_type_complex SEMICLN
   92         | . ident_list CLN KW_ARRAY hooks KW_OF var_type SEMICLN
   93         | . ident_list CLN IDENT SEMICLN
  106 ident_list: . IDENT
  107           | . ident_list COMMA IDENT

    IDENT  shift, and go to state 21

    $default  reduce using rule 10 (body_d)

    var_decl    go to state 52
    ident_list  go to state 23


State 15

    9 body_d: type_decl_section .  [KW_FUNCTION, KW_VAR, KW_PROCEDURE, KW_TYPE, SEMICLN, DOT, KW_BEGIN]
  102 type_decl_section: type_decl_section . type_decl SEMICLN
  103 type_decl: . ident_list EQ var_type
  104          | . ident_list EQ var_type_complex
  105          | . ident_list EQ KW_FUNCTION L_PARENTH profunc_head_var R_PARENTH CLN var_type
  106 ident_list: . IDENT
  107           | . ident_list COMMA IDENT

    IDENT  shift, and go to state 21

    $default  reduce using rule 9 (body_d)

    type_decl   go to state 53
    ident_list  go to state 26


State 16

   11 body_d: profunc . SEMICLN

    SEMICLN  shift, and go to state 54


State 17

  108 profunc: profunc_head_pro . SEMICLN
  110        | profunc_head_pro . SEMICLN KW_BEGIN statements KW_END
  112        | profunc_head_pro . SEMICLN body_decl
  114        | profunc_head_pro . SEMICLN body_decl KW_BEGIN statements KW_END

    SEMICLN  shift, and go to state 55


State 18

  109 profunc: profunc_head_func . SEMICLN
  111        | profunc_head_func . SEMICLN KW_BEGIN statements KW_END
  113        | profunc_head_func . SEMICLN body_decl
  115        | profunc_head_func . SEMICLN body_decl KW_BEGIN statements KW_END

    SEMICLN  shift, and go to state 56


State 19

    2 program_decl: KW_PROGRAM IDENT SEMICLN .

    $default  reduce using rule 2 (program_decl)


State 20

  117 profunc_head_func: KW_FUNCTION IDENT . L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | KW_FUNCTION IDENT . L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    L_PARENTH  shift, and go to state 57


State 21

  106 ident_list: IDENT .

    $default  reduce using rule 106 (ident_list)


State 22

   88 var_decl_section: KW_VAR var_decl .

    $default  reduce using rule 88 (var_decl_section)


State 23

   90 var_decl: ident_list . CLN var_type SEMICLN
   91         | ident_list . CLN var_type_complex SEMICLN
   92         | ident_list . CLN KW_ARRAY hooks KW_OF var_type SEMICLN
   93         | ident_list . CLN IDENT SEMICLN
  107 ident_list: ident_list . COMMA IDENT

    CLN    shift, and go to state 58
    COMMA  shift, and go to state 59


State 24

  116 profunc_head_pro: KW_PROCEDURE IDENT . L_PARENTH profunc_head_var R_PARENTH

    L_PARENTH  shift, and go to state 60


State 25

  101 type_decl_section: KW_TYPE type_decl . SEMICLN

    SEMICLN  shift, and go to state 61


State 26

  103 type_decl: ident_list . EQ var_type
  104          | ident_list . EQ var_type_complex
  105          | ident_list . EQ KW_FUNCTION L_PARENTH profunc_head_var R_PARENTH CLN var_type
  107 ident_list: ident_list . COMMA IDENT

    EQ     shift, and go to state 62
    COMMA  shift, and go to state 59


State 27

   23 profunc_call: IDENT . L_PARENTH arguments R_PARENTH
   32 label_statement: IDENT . CLN statement_cont
   38 statement_cont: IDENT . ASSIGN expression
   39               | IDENT . ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | IDENT . table_exp ASSIGN expression
   43               | IDENT . OP_PLUS ASSIGN expression
   44               | IDENT . OP_MINUS ASSIGN expression
   45               | IDENT . table_exp OP_PLUS ASSIGN expression
   46               | IDENT . table_exp OP_MINUS ASSIGN expression
   86 table_exp: . L_HOOK expression R_HOOK
   87          | . table_exp L_HOOK expression R_HOOK

    ASSIGN     shift, and go to state 63
    OP_PLUS    shift, and go to state 64
    OP_MINUS   shift, and go to state 65
    CLN        shift, and go to state 66
    L_HOOK     shift, and go to state 67
    L_PARENTH  shift, and go to state 68

    table_exp  go to state 69


State 28

   28 for_statement: KW_FOR . IDENT ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | KW_FOR . IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont

    IDENT  shift, and go to state 70


State 29

   33 goto_statement: KW_GOTO . IDENT

    IDENT  shift, and go to state 71


State 30

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   24 if_statement: KW_IF . expression KW_THEN statement_cont
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 83


State 31

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   30 while_statement: KW_WHILE . expression KW_DO statement_cont
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 84


State 32

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   31 repeat_statement: KW_REPEAT . statement_cont KW_UNTIL expression
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 85
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    profunc_call    go to state 41
    statement_cont  go to state 86


State 33

   36 statement_cont: KW_RESULT . ASSIGN expression
   37               | KW_RESULT . ASSIGN L_PARENTH var_type R_PARENTH expression
   41               | KW_RESULT . OP_PLUS ASSIGN expression
   42               | KW_RESULT . OP_MINUS ASSIGN expression

    ASSIGN    shift, and go to state 87
    OP_PLUS   shift, and go to state 88
    OP_MINUS  shift, and go to state 89


State 34

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   34 statement_cont: KW_RETURN .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   35               | KW_RETURN . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    $default  reduce using rule 34 (statement_cont)

    profunc_call  go to state 82
    expression    go to state 90


State 35

   47 statement_cont: KW_BREAK .

    $default  reduce using rule 47 (statement_cont)


State 36

   48 statement_cont: KW_CONTINUE .

    $default  reduce using rule 48 (statement_cont)


State 37

   14 statement_list: . statement
   15               | . statement_list SEMICLN statement
   16 statement: . statement_cont
   17          | . if_statement
   18          | . while_statement
   19          | . for_statement
   20          | . repeat_statement
   21          | . label_statement
   22          | . goto_statement
   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   24 if_statement: . KW_IF expression KW_THEN statement_cont
   25             | . if_statement else_statement
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont
   30 while_statement: . KW_WHILE expression KW_DO statement_cont
   31 repeat_statement: . KW_REPEAT statement_cont KW_UNTIL expression
   32 label_statement: . IDENT CLN statement_cont
   33 goto_statement: . KW_GOTO IDENT
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END
   50               | KW_BEGIN . statement_list KW_END

    IDENT        shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_GOTO      shift, and go to state 29
    KW_IF        shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_REPEAT    shift, and go to state 32
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    statement_list    go to state 91
    statement         go to state 40
    profunc_call      go to state 41
    if_statement      go to state 42
    for_statement     go to state 43
    while_statement   go to state 44
    repeat_statement  go to state 45
    label_statement   go to state 46
    goto_statement    go to state 47
    statement_cont    go to state 48


State 38

    3 main_body: KW_BEGIN statements . KW_END
    5          | KW_BEGIN statements . KW_END body_decl

    KW_END  shift, and go to state 92


State 39

   13 statements: statement_list .  [KW_END]
   15 statement_list: statement_list . SEMICLN statement

    SEMICLN  shift, and go to state 93

    $default  reduce using rule 13 (statements)


State 40

   14 statement_list: statement .

    $default  reduce using rule 14 (statement_list)


State 41

   49 statement_cont: profunc_call .

    $default  reduce using rule 49 (statement_cont)


State 42

   17 statement: if_statement .  [SEMICLN, KW_END]
   25 if_statement: if_statement . else_statement
   26 else_statement: . KW_ELSE statement_cont
   27               | . KW_ELSE KW_IF expression KW_THEN statement_cont

    KW_ELSE  shift, and go to state 94

    $default  reduce using rule 17 (statement)

    else_statement  go to state 95


State 43

   19 statement: for_statement .

    $default  reduce using rule 19 (statement)


State 44

   18 statement: while_statement .

    $default  reduce using rule 18 (statement)


State 45

   20 statement: repeat_statement .

    $default  reduce using rule 20 (statement)


State 46

   21 statement: label_statement .

    $default  reduce using rule 21 (statement)


State 47

   22 statement: goto_statement .

    $default  reduce using rule 22 (statement)


State 48

   16 statement: statement_cont .

    $default  reduce using rule 16 (statement)


State 49

    1 program: program_decl main_body DOT .

    $default  reduce using rule 1 (program)


State 50

    4 main_body: body_decl KW_BEGIN . statements KW_END
    6          | body_decl KW_BEGIN . statements KW_END body_decl
   12 statements: . %empty  [KW_END]
   13           | . statement_list
   14 statement_list: . statement
   15               | . statement_list SEMICLN statement
   16 statement: . statement_cont
   17          | . if_statement
   18          | . while_statement
   19          | . for_statement
   20          | . repeat_statement
   21          | . label_statement
   22          | . goto_statement
   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   24 if_statement: . KW_IF expression KW_THEN statement_cont
   25             | . if_statement else_statement
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont
   30 while_statement: . KW_WHILE expression KW_DO statement_cont
   31 repeat_statement: . KW_REPEAT statement_cont KW_UNTIL expression
   32 label_statement: . IDENT CLN statement_cont
   33 goto_statement: . KW_GOTO IDENT
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_GOTO      shift, and go to state 29
    KW_IF        shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_REPEAT    shift, and go to state 32
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    $default  reduce using rule 12 (statements)

    statements        go to state 96
    statement_list    go to state 39
    statement         go to state 40
    profunc_call      go to state 41
    if_statement      go to state 42
    for_statement     go to state 43
    while_statement   go to state 44
    repeat_statement  go to state 45
    label_statement   go to state 46
    goto_statement    go to state 47
    statement_cont    go to state 48


State 51

    8 body_decl: body_decl body_d .

    $default  reduce using rule 8 (body_decl)


State 52

   89 var_decl_section: var_decl_section var_decl .

    $default  reduce using rule 89 (var_decl_section)


State 53

  102 type_decl_section: type_decl_section type_decl . SEMICLN

    SEMICLN  shift, and go to state 97


State 54

   11 body_d: profunc SEMICLN .

    $default  reduce using rule 11 (body_d)


State 55

    7 body_decl: . body_d
    8          | . body_decl body_d
    9 body_d: . type_decl_section
   10       | . var_decl_section
   11       | . profunc SEMICLN
   88 var_decl_section: . KW_VAR var_decl
   89                 | . var_decl_section var_decl
  101 type_decl_section: . KW_TYPE type_decl SEMICLN
  102                  | . type_decl_section type_decl SEMICLN
  108 profunc: . profunc_head_pro SEMICLN
  108        | profunc_head_pro SEMICLN .  [SEMICLN]
  109        | . profunc_head_func SEMICLN
  110        | . profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  110        | profunc_head_pro SEMICLN . KW_BEGIN statements KW_END
  111        | . profunc_head_func SEMICLN KW_BEGIN statements KW_END
  112        | . profunc_head_pro SEMICLN body_decl
  112        | profunc_head_pro SEMICLN . body_decl
  113        | . profunc_head_func SEMICLN body_decl
  114        | . profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  114        | profunc_head_pro SEMICLN . body_decl KW_BEGIN statements KW_END
  115        | . profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END
  116 profunc_head_pro: . KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH
  117 profunc_head_func: . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    KW_FUNCTION   shift, and go to state 6
    KW_VAR        shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_TYPE       shift, and go to state 9
    KW_BEGIN      shift, and go to state 98

    $default  reduce using rule 108 (profunc)

    body_decl          go to state 99
    body_d             go to state 13
    var_decl_section   go to state 14
    type_decl_section  go to state 15
    profunc            go to state 16
    profunc_head_pro   go to state 17
    profunc_head_func  go to state 18


State 56

    7 body_decl: . body_d
    8          | . body_decl body_d
    9 body_d: . type_decl_section
   10       | . var_decl_section
   11       | . profunc SEMICLN
   88 var_decl_section: . KW_VAR var_decl
   89                 | . var_decl_section var_decl
  101 type_decl_section: . KW_TYPE type_decl SEMICLN
  102                  | . type_decl_section type_decl SEMICLN
  108 profunc: . profunc_head_pro SEMICLN
  109        | . profunc_head_func SEMICLN
  109        | profunc_head_func SEMICLN .  [SEMICLN]
  110        | . profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  111        | . profunc_head_func SEMICLN KW_BEGIN statements KW_END
  111        | profunc_head_func SEMICLN . KW_BEGIN statements KW_END
  112        | . profunc_head_pro SEMICLN body_decl
  113        | . profunc_head_func SEMICLN body_decl
  113        | profunc_head_func SEMICLN . body_decl
  114        | . profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  115        | . profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END
  115        | profunc_head_func SEMICLN . body_decl KW_BEGIN statements KW_END
  116 profunc_head_pro: . KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH
  117 profunc_head_func: . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    KW_FUNCTION   shift, and go to state 6
    KW_VAR        shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_TYPE       shift, and go to state 9
    KW_BEGIN      shift, and go to state 100

    $default  reduce using rule 109 (profunc)

    body_decl          go to state 101
    body_d             go to state 13
    var_decl_section   go to state 14
    type_decl_section  go to state 15
    profunc            go to state 16
    profunc_head_pro   go to state 17
    profunc_head_func  go to state 18


State 57

  117 profunc_head_func: KW_FUNCTION IDENT L_PARENTH . profunc_head_var R_PARENTH CLN var_type
  118                  | KW_FUNCTION IDENT L_PARENTH . profunc_head_var R_PARENTH CLN var_type_complex
  119 profunc_head_var: . %empty  [R_PARENTH]
  120                 | . profunc_head_var_list
  121 profunc_head_var_list: . profunc_head_var_one
  122                      | . profunc_head_var_one SEMICLN profunc_head_var_list
  123 profunc_head_var_one: . IDENT CLN var_type
  124                     | . IDENT CLN var_type_complex
  125                     | . IDENT COMMA IDENT CLN var_type
  126                     | . IDENT COMMA IDENT CLN var_type_complex
  127                     | . IDENT CLN IDENT

    IDENT  shift, and go to state 102

    $default  reduce using rule 119 (profunc_head_var)

    profunc_head_var       go to state 103
    profunc_head_var_list  go to state 104
    profunc_head_var_one   go to state 105


State 58

   90 var_decl: ident_list CLN . var_type SEMICLN
   91         | ident_list CLN . var_type_complex SEMICLN
   92         | ident_list CLN . KW_ARRAY hooks KW_OF var_type SEMICLN
   93         | ident_list CLN . IDENT SEMICLN
   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL
   98 var_type_complex: . KW_ARRAY KW_OF var_type

    IDENT       shift, and go to state 106
    KW_INT      shift, and go to state 107
    KW_REAL     shift, and go to state 108
    KW_CHAR     shift, and go to state 109
    KW_ARRAY    shift, and go to state 110
    KW_BOOLEAN  shift, and go to state 111

    var_type          go to state 112
    var_type_complex  go to state 113


State 59

  107 ident_list: ident_list COMMA . IDENT

    IDENT  shift, and go to state 114


State 60

  116 profunc_head_pro: KW_PROCEDURE IDENT L_PARENTH . profunc_head_var R_PARENTH
  119 profunc_head_var: . %empty  [R_PARENTH]
  120                 | . profunc_head_var_list
  121 profunc_head_var_list: . profunc_head_var_one
  122                      | . profunc_head_var_one SEMICLN profunc_head_var_list
  123 profunc_head_var_one: . IDENT CLN var_type
  124                     | . IDENT CLN var_type_complex
  125                     | . IDENT COMMA IDENT CLN var_type
  126                     | . IDENT COMMA IDENT CLN var_type_complex
  127                     | . IDENT CLN IDENT

    IDENT  shift, and go to state 102

    $default  reduce using rule 119 (profunc_head_var)

    profunc_head_var       go to state 115
    profunc_head_var_list  go to state 104
    profunc_head_var_one   go to state 105


State 61

  101 type_decl_section: KW_TYPE type_decl SEMICLN .

    $default  reduce using rule 101 (type_decl_section)


State 62

   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL
   98 var_type_complex: . KW_ARRAY KW_OF var_type
  103 type_decl: ident_list EQ . var_type
  104          | ident_list EQ . var_type_complex
  105          | ident_list EQ . KW_FUNCTION L_PARENTH profunc_head_var R_PARENTH CLN var_type

    KW_FUNCTION  shift, and go to state 116
    KW_INT       shift, and go to state 107
    KW_REAL      shift, and go to state 108
    KW_CHAR      shift, and go to state 109
    KW_ARRAY     shift, and go to state 117
    KW_BOOLEAN   shift, and go to state 111

    var_type          go to state 118
    var_type_complex  go to state 119


State 63

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   38 statement_cont: IDENT ASSIGN . expression
   39               | IDENT ASSIGN . L_PARENTH var_type R_PARENTH expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 120
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 121


State 64

   43 statement_cont: IDENT OP_PLUS . ASSIGN expression

    ASSIGN  shift, and go to state 122


State 65

   44 statement_cont: IDENT OP_MINUS . ASSIGN expression

    ASSIGN  shift, and go to state 123


State 66

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   32 label_statement: IDENT CLN . statement_cont
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 85
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    profunc_call    go to state 41
    statement_cont  go to state 124


State 67

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING
   86 table_exp: L_HOOK . expression R_HOOK

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 125


State 68

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   23             | IDENT L_PARENTH . arguments R_PARENTH
   51 arguments: . %empty  [R_PARENTH]
   52          | . arglist
   53          | . var_type
   54 arglist: . expression
   55        | . arglist COMMA expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING
   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    KW_INT      shift, and go to state 107
    KW_REAL     shift, and go to state 108
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81
    KW_CHAR     shift, and go to state 109
    KW_BOOLEAN  shift, and go to state 111

    $default  reduce using rule 51 (arguments)

    profunc_call  go to state 82
    arguments     go to state 126
    arglist       go to state 127
    expression    go to state 128
    var_type      go to state 129


State 69

   40 statement_cont: IDENT table_exp . ASSIGN expression
   45               | IDENT table_exp . OP_PLUS ASSIGN expression
   46               | IDENT table_exp . OP_MINUS ASSIGN expression
   87 table_exp: table_exp . L_HOOK expression R_HOOK

    ASSIGN    shift, and go to state 130
    OP_PLUS   shift, and go to state 131
    OP_MINUS  shift, and go to state 132
    L_HOOK    shift, and go to state 133


State 70

   28 for_statement: KW_FOR IDENT . ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | KW_FOR IDENT . ASSIGN expression KW_DOWNTO expression KW_DO statement_cont

    ASSIGN  shift, and go to state 134


State 71

   33 goto_statement: KW_GOTO IDENT .

    $default  reduce using rule 33 (goto_statement)


State 72

   23 profunc_call: IDENT . L_PARENTH arguments R_PARENTH
   58 expression: IDENT .  [KW_ELSE, KW_NOT, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, KW_MOD, KW_DIV, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, EXCL_MARK, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   59           | IDENT . table_exp
   86 table_exp: . L_HOOK expression R_HOOK
   87          | . table_exp L_HOOK expression R_HOOK

    L_HOOK     shift, and go to state 67
    L_PARENTH  shift, and go to state 68

    $default  reduce using rule 58 (expression)

    table_exp  go to state 135


State 73

   56 expression: POSINT .

    $default  reduce using rule 56 (expression)


State 74

   57 expression: REAL .

    $default  reduce using rule 57 (expression)


State 75

   85 expression: STRING .

    $default  reduce using rule 85 (expression)


State 76

   60 expression: KW_RESULT .

    $default  reduce using rule 60 (expression)


State 77

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   69           | OP_PLUS . expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 136


State 78

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   70           | OP_MINUS . expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 137


State 79

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   64           | L_PARENTH . expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 138


State 80

   84 expression: BOOL_TRUE .

    $default  reduce using rule 84 (expression)


State 81

   83 expression: BOOL_FALSE .

    $default  reduce using rule 83 (expression)


State 82

   61 expression: profunc_call .

    $default  reduce using rule 61 (expression)


State 83

   24 if_statement: KW_IF expression . KW_THEN statement_cont
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    KW_THEN      shift, and go to state 141
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157


State 84

   30 while_statement: KW_WHILE expression . KW_DO statement_cont
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_DO        shift, and go to state 158
    KW_AND       shift, and go to state 157


State 85

   23 profunc_call: IDENT . L_PARENTH arguments R_PARENTH
   38 statement_cont: IDENT . ASSIGN expression
   39               | IDENT . ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | IDENT . table_exp ASSIGN expression
   43               | IDENT . OP_PLUS ASSIGN expression
   44               | IDENT . OP_MINUS ASSIGN expression
   45               | IDENT . table_exp OP_PLUS ASSIGN expression
   46               | IDENT . table_exp OP_MINUS ASSIGN expression
   86 table_exp: . L_HOOK expression R_HOOK
   87          | . table_exp L_HOOK expression R_HOOK

    ASSIGN     shift, and go to state 63
    OP_PLUS    shift, and go to state 64
    OP_MINUS   shift, and go to state 65
    L_HOOK     shift, and go to state 67
    L_PARENTH  shift, and go to state 68

    table_exp  go to state 69


State 86

   31 repeat_statement: KW_REPEAT statement_cont . KW_UNTIL expression

    KW_UNTIL  shift, and go to state 159


State 87

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   36 statement_cont: KW_RESULT ASSIGN . expression
   37               | KW_RESULT ASSIGN . L_PARENTH var_type R_PARENTH expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 160
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 161


State 88

   41 statement_cont: KW_RESULT OP_PLUS . ASSIGN expression

    ASSIGN  shift, and go to state 162


State 89

   42 statement_cont: KW_RESULT OP_MINUS . ASSIGN expression

    ASSIGN  shift, and go to state 163


State 90

   35 statement_cont: KW_RETURN expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 35 (statement_cont)


State 91

   15 statement_list: statement_list . SEMICLN statement
   50 statement_cont: KW_BEGIN statement_list . KW_END

    SEMICLN  shift, and go to state 93
    KW_END   shift, and go to state 164


State 92

    3 main_body: KW_BEGIN statements KW_END .  [DOT]
    5          | KW_BEGIN statements KW_END . body_decl
    7 body_decl: . body_d
    8          | . body_decl body_d
    9 body_d: . type_decl_section
   10       | . var_decl_section
   11       | . profunc SEMICLN
   88 var_decl_section: . KW_VAR var_decl
   89                 | . var_decl_section var_decl
  101 type_decl_section: . KW_TYPE type_decl SEMICLN
  102                  | . type_decl_section type_decl SEMICLN
  108 profunc: . profunc_head_pro SEMICLN
  109        | . profunc_head_func SEMICLN
  110        | . profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  111        | . profunc_head_func SEMICLN KW_BEGIN statements KW_END
  112        | . profunc_head_pro SEMICLN body_decl
  113        | . profunc_head_func SEMICLN body_decl
  114        | . profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  115        | . profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END
  116 profunc_head_pro: . KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH
  117 profunc_head_func: . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    KW_FUNCTION   shift, and go to state 6
    KW_VAR        shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_TYPE       shift, and go to state 9

    $default  reduce using rule 3 (main_body)

    body_decl          go to state 165
    body_d             go to state 13
    var_decl_section   go to state 14
    type_decl_section  go to state 15
    profunc            go to state 16
    profunc_head_pro   go to state 17
    profunc_head_func  go to state 18


State 93

   15 statement_list: statement_list SEMICLN . statement
   16 statement: . statement_cont
   17          | . if_statement
   18          | . while_statement
   19          | . for_statement
   20          | . repeat_statement
   21          | . label_statement
   22          | . goto_statement
   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   24 if_statement: . KW_IF expression KW_THEN statement_cont
   25             | . if_statement else_statement
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont
   30 while_statement: . KW_WHILE expression KW_DO statement_cont
   31 repeat_statement: . KW_REPEAT statement_cont KW_UNTIL expression
   32 label_statement: . IDENT CLN statement_cont
   33 goto_statement: . KW_GOTO IDENT
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_GOTO      shift, and go to state 29
    KW_IF        shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_REPEAT    shift, and go to state 32
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    statement         go to state 166
    profunc_call      go to state 41
    if_statement      go to state 42
    for_statement     go to state 43
    while_statement   go to state 44
    repeat_statement  go to state 45
    label_statement   go to state 46
    goto_statement    go to state 47
    statement_cont    go to state 48


State 94

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   26 else_statement: KW_ELSE . statement_cont
   27               | KW_ELSE . KW_IF expression KW_THEN statement_cont
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 85
    KW_IF        shift, and go to state 167
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    profunc_call    go to state 41
    statement_cont  go to state 168


State 95

   25 if_statement: if_statement else_statement .

    $default  reduce using rule 25 (if_statement)


State 96

    4 main_body: body_decl KW_BEGIN statements . KW_END
    6          | body_decl KW_BEGIN statements . KW_END body_decl

    KW_END  shift, and go to state 169


State 97

  102 type_decl_section: type_decl_section type_decl SEMICLN .

    $default  reduce using rule 102 (type_decl_section)


State 98

   12 statements: . %empty  [KW_END]
   13           | . statement_list
   14 statement_list: . statement
   15               | . statement_list SEMICLN statement
   16 statement: . statement_cont
   17          | . if_statement
   18          | . while_statement
   19          | . for_statement
   20          | . repeat_statement
   21          | . label_statement
   22          | . goto_statement
   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   24 if_statement: . KW_IF expression KW_THEN statement_cont
   25             | . if_statement else_statement
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont
   30 while_statement: . KW_WHILE expression KW_DO statement_cont
   31 repeat_statement: . KW_REPEAT statement_cont KW_UNTIL expression
   32 label_statement: . IDENT CLN statement_cont
   33 goto_statement: . KW_GOTO IDENT
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END
  110 profunc: profunc_head_pro SEMICLN KW_BEGIN . statements KW_END

    IDENT        shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_GOTO      shift, and go to state 29
    KW_IF        shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_REPEAT    shift, and go to state 32
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    $default  reduce using rule 12 (statements)

    statements        go to state 170
    statement_list    go to state 39
    statement         go to state 40
    profunc_call      go to state 41
    if_statement      go to state 42
    for_statement     go to state 43
    while_statement   go to state 44
    repeat_statement  go to state 45
    label_statement   go to state 46
    goto_statement    go to state 47
    statement_cont    go to state 48


State 99

    8 body_decl: body_decl . body_d
    9 body_d: . type_decl_section
   10       | . var_decl_section
   11       | . profunc SEMICLN
   88 var_decl_section: . KW_VAR var_decl
   89                 | . var_decl_section var_decl
  101 type_decl_section: . KW_TYPE type_decl SEMICLN
  102                  | . type_decl_section type_decl SEMICLN
  108 profunc: . profunc_head_pro SEMICLN
  109        | . profunc_head_func SEMICLN
  110        | . profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  111        | . profunc_head_func SEMICLN KW_BEGIN statements KW_END
  112        | . profunc_head_pro SEMICLN body_decl
  112        | profunc_head_pro SEMICLN body_decl .  [SEMICLN]
  113        | . profunc_head_func SEMICLN body_decl
  114        | . profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  114        | profunc_head_pro SEMICLN body_decl . KW_BEGIN statements KW_END
  115        | . profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END
  116 profunc_head_pro: . KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH
  117 profunc_head_func: . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    KW_FUNCTION   shift, and go to state 6
    KW_VAR        shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_TYPE       shift, and go to state 9
    KW_BEGIN      shift, and go to state 171

    $default  reduce using rule 112 (profunc)

    body_d             go to state 51
    var_decl_section   go to state 14
    type_decl_section  go to state 15
    profunc            go to state 16
    profunc_head_pro   go to state 17
    profunc_head_func  go to state 18


State 100

   12 statements: . %empty  [KW_END]
   13           | . statement_list
   14 statement_list: . statement
   15               | . statement_list SEMICLN statement
   16 statement: . statement_cont
   17          | . if_statement
   18          | . while_statement
   19          | . for_statement
   20          | . repeat_statement
   21          | . label_statement
   22          | . goto_statement
   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   24 if_statement: . KW_IF expression KW_THEN statement_cont
   25             | . if_statement else_statement
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont
   30 while_statement: . KW_WHILE expression KW_DO statement_cont
   31 repeat_statement: . KW_REPEAT statement_cont KW_UNTIL expression
   32 label_statement: . IDENT CLN statement_cont
   33 goto_statement: . KW_GOTO IDENT
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END
  111 profunc: profunc_head_func SEMICLN KW_BEGIN . statements KW_END

    IDENT        shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_GOTO      shift, and go to state 29
    KW_IF        shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_REPEAT    shift, and go to state 32
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    $default  reduce using rule 12 (statements)

    statements        go to state 172
    statement_list    go to state 39
    statement         go to state 40
    profunc_call      go to state 41
    if_statement      go to state 42
    for_statement     go to state 43
    while_statement   go to state 44
    repeat_statement  go to state 45
    label_statement   go to state 46
    goto_statement    go to state 47
    statement_cont    go to state 48


State 101

    8 body_decl: body_decl . body_d
    9 body_d: . type_decl_section
   10       | . var_decl_section
   11       | . profunc SEMICLN
   88 var_decl_section: . KW_VAR var_decl
   89                 | . var_decl_section var_decl
  101 type_decl_section: . KW_TYPE type_decl SEMICLN
  102                  | . type_decl_section type_decl SEMICLN
  108 profunc: . profunc_head_pro SEMICLN
  109        | . profunc_head_func SEMICLN
  110        | . profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  111        | . profunc_head_func SEMICLN KW_BEGIN statements KW_END
  112        | . profunc_head_pro SEMICLN body_decl
  113        | . profunc_head_func SEMICLN body_decl
  113        | profunc_head_func SEMICLN body_decl .  [SEMICLN]
  114        | . profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  115        | . profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END
  115        | profunc_head_func SEMICLN body_decl . KW_BEGIN statements KW_END
  116 profunc_head_pro: . KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH
  117 profunc_head_func: . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    KW_FUNCTION   shift, and go to state 6
    KW_VAR        shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_TYPE       shift, and go to state 9
    KW_BEGIN      shift, and go to state 173

    $default  reduce using rule 113 (profunc)

    body_d             go to state 51
    var_decl_section   go to state 14
    type_decl_section  go to state 15
    profunc            go to state 16
    profunc_head_pro   go to state 17
    profunc_head_func  go to state 18


State 102

  123 profunc_head_var_one: IDENT . CLN var_type
  124                     | IDENT . CLN var_type_complex
  125                     | IDENT . COMMA IDENT CLN var_type
  126                     | IDENT . COMMA IDENT CLN var_type_complex
  127                     | IDENT . CLN IDENT

    CLN    shift, and go to state 174
    COMMA  shift, and go to state 175


State 103

  117 profunc_head_func: KW_FUNCTION IDENT L_PARENTH profunc_head_var . R_PARENTH CLN var_type
  118                  | KW_FUNCTION IDENT L_PARENTH profunc_head_var . R_PARENTH CLN var_type_complex

    R_PARENTH  shift, and go to state 176


State 104

  120 profunc_head_var: profunc_head_var_list .

    $default  reduce using rule 120 (profunc_head_var)


State 105

  121 profunc_head_var_list: profunc_head_var_one .  [R_PARENTH]
  122                      | profunc_head_var_one . SEMICLN profunc_head_var_list

    SEMICLN  shift, and go to state 177

    $default  reduce using rule 121 (profunc_head_var_list)


State 106

   93 var_decl: ident_list CLN IDENT . SEMICLN

    SEMICLN  shift, and go to state 178


State 107

   94 var_type: KW_INT .

    $default  reduce using rule 94 (var_type)


State 108

   97 var_type: KW_REAL .

    $default  reduce using rule 97 (var_type)


State 109

   96 var_type: KW_CHAR .

    $default  reduce using rule 96 (var_type)


State 110

   92 var_decl: ident_list CLN KW_ARRAY . hooks KW_OF var_type SEMICLN
   98 var_type_complex: KW_ARRAY . KW_OF var_type
   99 hooks: . L_HOOK POSINT R_HOOK
  100      | . hooks L_HOOK POSINT R_HOOK

    KW_OF   shift, and go to state 179
    L_HOOK  shift, and go to state 180

    hooks  go to state 181


State 111

   95 var_type: KW_BOOLEAN .

    $default  reduce using rule 95 (var_type)


State 112

   90 var_decl: ident_list CLN var_type . SEMICLN

    SEMICLN  shift, and go to state 182


State 113

   91 var_decl: ident_list CLN var_type_complex . SEMICLN

    SEMICLN  shift, and go to state 183


State 114

  107 ident_list: ident_list COMMA IDENT .

    $default  reduce using rule 107 (ident_list)


State 115

  116 profunc_head_pro: KW_PROCEDURE IDENT L_PARENTH profunc_head_var . R_PARENTH

    R_PARENTH  shift, and go to state 184


State 116

  105 type_decl: ident_list EQ KW_FUNCTION . L_PARENTH profunc_head_var R_PARENTH CLN var_type

    L_PARENTH  shift, and go to state 185


State 117

   98 var_type_complex: KW_ARRAY . KW_OF var_type

    KW_OF  shift, and go to state 179


State 118

  103 type_decl: ident_list EQ var_type .

    $default  reduce using rule 103 (type_decl)


State 119

  104 type_decl: ident_list EQ var_type_complex .

    $default  reduce using rule 104 (type_decl)


State 120

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   39 statement_cont: IDENT ASSIGN L_PARENTH . var_type R_PARENTH expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   64           | L_PARENTH . expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING
   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    KW_INT      shift, and go to state 107
    KW_REAL     shift, and go to state 108
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81
    KW_CHAR     shift, and go to state 109
    KW_BOOLEAN  shift, and go to state 111

    profunc_call  go to state 82
    expression    go to state 138
    var_type      go to state 186


State 121

   38 statement_cont: IDENT ASSIGN expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 38 (statement_cont)


State 122

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   43 statement_cont: IDENT OP_PLUS ASSIGN . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 187


State 123

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   44 statement_cont: IDENT OP_MINUS ASSIGN . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 188


State 124

   32 label_statement: IDENT CLN statement_cont .

    $default  reduce using rule 32 (label_statement)


State 125

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression
   86 table_exp: L_HOOK expression . R_HOOK

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    R_HOOK       shift, and go to state 189
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157


State 126

   23 profunc_call: IDENT L_PARENTH arguments . R_PARENTH

    R_PARENTH  shift, and go to state 190


State 127

   52 arguments: arglist .  [R_PARENTH]
   55 arglist: arglist . COMMA expression

    COMMA  shift, and go to state 191

    $default  reduce using rule 52 (arguments)


State 128

   54 arglist: expression .  [COMMA, R_PARENTH]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 54 (arglist)


State 129

   53 arguments: var_type .

    $default  reduce using rule 53 (arguments)


State 130

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   40 statement_cont: IDENT table_exp ASSIGN . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 192


State 131

   45 statement_cont: IDENT table_exp OP_PLUS . ASSIGN expression

    ASSIGN  shift, and go to state 193


State 132

   46 statement_cont: IDENT table_exp OP_MINUS . ASSIGN expression

    ASSIGN  shift, and go to state 194


State 133

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING
   87 table_exp: table_exp L_HOOK . expression R_HOOK

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 195


State 134

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   28 for_statement: KW_FOR IDENT ASSIGN . expression KW_TO expression KW_DO statement_cont
   29              | KW_FOR IDENT ASSIGN . expression KW_DOWNTO expression KW_DO statement_cont
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 196


State 135

   59 expression: IDENT table_exp .  [KW_ELSE, KW_NOT, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, KW_MOD, KW_DIV, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, EXCL_MARK, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   87 table_exp: table_exp . L_HOOK expression R_HOOK

    L_HOOK  shift, and go to state 133

    $default  reduce using rule 59 (expression)


State 136

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   69           | OP_PLUS expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    OP_MULT    shift, and go to state 144
    OP_DIV     shift, and go to state 145
    KW_MOD     shift, and go to state 146
    KW_DIV     shift, and go to state 147
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 69 (expression)

    Conflict between rule 69 and token KW_NOT resolved as shift (OP_PLUS < KW_NOT).
    Conflict between rule 69 and token KW_OR resolved as reduce (KW_OR < OP_PLUS).
    Conflict between rule 69 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 69 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 69 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).
    Conflict between rule 69 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 69 and token KW_MOD resolved as shift (OP_PLUS < KW_MOD).
    Conflict between rule 69 and token KW_DIV resolved as shift (OP_PLUS < KW_DIV).
    Conflict between rule 69 and token EQ resolved as reduce (EQ < OP_PLUS).
    Conflict between rule 69 and token EXCL_MARK resolved as shift (OP_PLUS < EXCL_MARK).
    Conflict between rule 69 and token CMPR_LESS resolved as reduce (CMPR_LESS < OP_PLUS).
    Conflict between rule 69 and token CMPR_LESSEQ resolved as reduce (CMPR_LESSEQ < OP_PLUS).
    Conflict between rule 69 and token CMPR_GRTR resolved as reduce (CMPR_GRTR < OP_PLUS).
    Conflict between rule 69 and token CMPR_GRTREQ resolved as reduce (CMPR_GRTREQ < OP_PLUS).
    Conflict between rule 69 and token CMPR_DIFF resolved as reduce (CMPR_DIFF < OP_PLUS).
    Conflict between rule 69 and token OP_AND resolved as reduce (OP_AND < OP_PLUS).
    Conflict between rule 69 and token OP_OR resolved as reduce (OP_OR < OP_PLUS).
    Conflict between rule 69 and token KW_AND resolved as reduce (KW_AND < OP_PLUS).


State 137

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   70           | OP_MINUS expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    OP_MULT    shift, and go to state 144
    OP_DIV     shift, and go to state 145
    KW_MOD     shift, and go to state 146
    KW_DIV     shift, and go to state 147
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 70 (expression)

    Conflict between rule 70 and token KW_NOT resolved as shift (OP_MINUS < KW_NOT).
    Conflict between rule 70 and token KW_OR resolved as reduce (KW_OR < OP_MINUS).
    Conflict between rule 70 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 70 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 70 and token OP_MULT resolved as shift (OP_MINUS < OP_MULT).
    Conflict between rule 70 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 70 and token KW_MOD resolved as shift (OP_MINUS < KW_MOD).
    Conflict between rule 70 and token KW_DIV resolved as shift (OP_MINUS < KW_DIV).
    Conflict between rule 70 and token EQ resolved as reduce (EQ < OP_MINUS).
    Conflict between rule 70 and token EXCL_MARK resolved as shift (OP_MINUS < EXCL_MARK).
    Conflict between rule 70 and token CMPR_LESS resolved as reduce (CMPR_LESS < OP_MINUS).
    Conflict between rule 70 and token CMPR_LESSEQ resolved as reduce (CMPR_LESSEQ < OP_MINUS).
    Conflict between rule 70 and token CMPR_GRTR resolved as reduce (CMPR_GRTR < OP_MINUS).
    Conflict between rule 70 and token CMPR_GRTREQ resolved as reduce (CMPR_GRTREQ < OP_MINUS).
    Conflict between rule 70 and token CMPR_DIFF resolved as reduce (CMPR_DIFF < OP_MINUS).
    Conflict between rule 70 and token OP_AND resolved as reduce (OP_AND < OP_MINUS).
    Conflict between rule 70 and token OP_OR resolved as reduce (OP_OR < OP_MINUS).
    Conflict between rule 70 and token KW_AND resolved as reduce (KW_AND < OP_MINUS).


State 138

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   64           | L_PARENTH expression . R_PARENTH
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    R_PARENTH    shift, and go to state 197
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157


State 139

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   63           | expression KW_NOT . expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 198


State 140

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   81           | expression KW_OR . expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 199


State 141

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   24 if_statement: KW_IF expression KW_THEN . statement_cont
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 85
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    profunc_call    go to state 41
    statement_cont  go to state 200


State 142

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   71           | expression OP_PLUS . expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 201


State 143

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   72           | expression OP_MINUS . expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 202


State 144

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   65           | expression OP_MULT . expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 203


State 145

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   66           | expression OP_DIV . expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 204


State 146

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   68           | expression KW_MOD . expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 205


State 147

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   67           | expression KW_DIV . expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 206


State 148

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   73           | expression EQ . expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 207


State 149

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   62           | expression EXCL_MARK . expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 208


State 150

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   75           | expression CMPR_LESS . expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 209


State 151

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   76           | expression CMPR_LESSEQ . expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 210


State 152

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   77           | expression CMPR_GRTR . expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 211


State 153

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   78           | expression CMPR_GRTREQ . expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 212


State 154

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   74           | expression CMPR_DIFF . expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 213


State 155

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   80           | expression OP_AND . expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 214


State 156

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   82           | expression OP_OR . expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 215


State 157

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   79           | expression KW_AND . expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 216


State 158

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   30 while_statement: KW_WHILE expression KW_DO . statement_cont
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 85
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    profunc_call    go to state 41
    statement_cont  go to state 217


State 159

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   31 repeat_statement: KW_REPEAT statement_cont KW_UNTIL . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 218


State 160

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   37 statement_cont: KW_RESULT ASSIGN L_PARENTH . var_type R_PARENTH expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   64           | L_PARENTH . expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING
   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    KW_INT      shift, and go to state 107
    KW_REAL     shift, and go to state 108
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81
    KW_CHAR     shift, and go to state 109
    KW_BOOLEAN  shift, and go to state 111

    profunc_call  go to state 82
    expression    go to state 138
    var_type      go to state 219


State 161

   36 statement_cont: KW_RESULT ASSIGN expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 36 (statement_cont)


State 162

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   41 statement_cont: KW_RESULT OP_PLUS ASSIGN . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 220


State 163

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   42 statement_cont: KW_RESULT OP_MINUS ASSIGN . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 221


State 164

   50 statement_cont: KW_BEGIN statement_list KW_END .

    $default  reduce using rule 50 (statement_cont)


State 165

    5 main_body: KW_BEGIN statements KW_END body_decl .  [DOT]
    8 body_decl: body_decl . body_d
    9 body_d: . type_decl_section
   10       | . var_decl_section
   11       | . profunc SEMICLN
   88 var_decl_section: . KW_VAR var_decl
   89                 | . var_decl_section var_decl
  101 type_decl_section: . KW_TYPE type_decl SEMICLN
  102                  | . type_decl_section type_decl SEMICLN
  108 profunc: . profunc_head_pro SEMICLN
  109        | . profunc_head_func SEMICLN
  110        | . profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  111        | . profunc_head_func SEMICLN KW_BEGIN statements KW_END
  112        | . profunc_head_pro SEMICLN body_decl
  113        | . profunc_head_func SEMICLN body_decl
  114        | . profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  115        | . profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END
  116 profunc_head_pro: . KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH
  117 profunc_head_func: . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    KW_FUNCTION   shift, and go to state 6
    KW_VAR        shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_TYPE       shift, and go to state 9

    $default  reduce using rule 5 (main_body)

    body_d             go to state 51
    var_decl_section   go to state 14
    type_decl_section  go to state 15
    profunc            go to state 16
    profunc_head_pro   go to state 17
    profunc_head_func  go to state 18


State 166

   15 statement_list: statement_list SEMICLN statement .

    $default  reduce using rule 15 (statement_list)


State 167

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   27 else_statement: KW_ELSE KW_IF . expression KW_THEN statement_cont
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 222


State 168

   26 else_statement: KW_ELSE statement_cont .

    $default  reduce using rule 26 (else_statement)


State 169

    4 main_body: body_decl KW_BEGIN statements KW_END .  [DOT]
    6          | body_decl KW_BEGIN statements KW_END . body_decl
    7 body_decl: . body_d
    8          | . body_decl body_d
    9 body_d: . type_decl_section
   10       | . var_decl_section
   11       | . profunc SEMICLN
   88 var_decl_section: . KW_VAR var_decl
   89                 | . var_decl_section var_decl
  101 type_decl_section: . KW_TYPE type_decl SEMICLN
  102                  | . type_decl_section type_decl SEMICLN
  108 profunc: . profunc_head_pro SEMICLN
  109        | . profunc_head_func SEMICLN
  110        | . profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  111        | . profunc_head_func SEMICLN KW_BEGIN statements KW_END
  112        | . profunc_head_pro SEMICLN body_decl
  113        | . profunc_head_func SEMICLN body_decl
  114        | . profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  115        | . profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END
  116 profunc_head_pro: . KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH
  117 profunc_head_func: . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    KW_FUNCTION   shift, and go to state 6
    KW_VAR        shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_TYPE       shift, and go to state 9

    $default  reduce using rule 4 (main_body)

    body_decl          go to state 223
    body_d             go to state 13
    var_decl_section   go to state 14
    type_decl_section  go to state 15
    profunc            go to state 16
    profunc_head_pro   go to state 17
    profunc_head_func  go to state 18


State 170

  110 profunc: profunc_head_pro SEMICLN KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 224


State 171

   12 statements: . %empty  [KW_END]
   13           | . statement_list
   14 statement_list: . statement
   15               | . statement_list SEMICLN statement
   16 statement: . statement_cont
   17          | . if_statement
   18          | . while_statement
   19          | . for_statement
   20          | . repeat_statement
   21          | . label_statement
   22          | . goto_statement
   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   24 if_statement: . KW_IF expression KW_THEN statement_cont
   25             | . if_statement else_statement
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont
   30 while_statement: . KW_WHILE expression KW_DO statement_cont
   31 repeat_statement: . KW_REPEAT statement_cont KW_UNTIL expression
   32 label_statement: . IDENT CLN statement_cont
   33 goto_statement: . KW_GOTO IDENT
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END
  114 profunc: profunc_head_pro SEMICLN body_decl KW_BEGIN . statements KW_END

    IDENT        shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_GOTO      shift, and go to state 29
    KW_IF        shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_REPEAT    shift, and go to state 32
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    $default  reduce using rule 12 (statements)

    statements        go to state 225
    statement_list    go to state 39
    statement         go to state 40
    profunc_call      go to state 41
    if_statement      go to state 42
    for_statement     go to state 43
    while_statement   go to state 44
    repeat_statement  go to state 45
    label_statement   go to state 46
    goto_statement    go to state 47
    statement_cont    go to state 48


State 172

  111 profunc: profunc_head_func SEMICLN KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 226


State 173

   12 statements: . %empty  [KW_END]
   13           | . statement_list
   14 statement_list: . statement
   15               | . statement_list SEMICLN statement
   16 statement: . statement_cont
   17          | . if_statement
   18          | . while_statement
   19          | . for_statement
   20          | . repeat_statement
   21          | . label_statement
   22          | . goto_statement
   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   24 if_statement: . KW_IF expression KW_THEN statement_cont
   25             | . if_statement else_statement
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement_cont
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont
   30 while_statement: . KW_WHILE expression KW_DO statement_cont
   31 repeat_statement: . KW_REPEAT statement_cont KW_UNTIL expression
   32 label_statement: . IDENT CLN statement_cont
   33 goto_statement: . KW_GOTO IDENT
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END
  115 profunc: profunc_head_func SEMICLN body_decl KW_BEGIN . statements KW_END

    IDENT        shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_GOTO      shift, and go to state 29
    KW_IF        shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_REPEAT    shift, and go to state 32
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    $default  reduce using rule 12 (statements)

    statements        go to state 227
    statement_list    go to state 39
    statement         go to state 40
    profunc_call      go to state 41
    if_statement      go to state 42
    for_statement     go to state 43
    while_statement   go to state 44
    repeat_statement  go to state 45
    label_statement   go to state 46
    goto_statement    go to state 47
    statement_cont    go to state 48


State 174

   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL
   98 var_type_complex: . KW_ARRAY KW_OF var_type
  123 profunc_head_var_one: IDENT CLN . var_type
  124                     | IDENT CLN . var_type_complex
  127                     | IDENT CLN . IDENT

    IDENT       shift, and go to state 228
    KW_INT      shift, and go to state 107
    KW_REAL     shift, and go to state 108
    KW_CHAR     shift, and go to state 109
    KW_ARRAY    shift, and go to state 117
    KW_BOOLEAN  shift, and go to state 111

    var_type          go to state 229
    var_type_complex  go to state 230


State 175

  125 profunc_head_var_one: IDENT COMMA . IDENT CLN var_type
  126                     | IDENT COMMA . IDENT CLN var_type_complex

    IDENT  shift, and go to state 231


State 176

  117 profunc_head_func: KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH . CLN var_type
  118                  | KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH . CLN var_type_complex

    CLN  shift, and go to state 232


State 177

  121 profunc_head_var_list: . profunc_head_var_one
  122                      | . profunc_head_var_one SEMICLN profunc_head_var_list
  122                      | profunc_head_var_one SEMICLN . profunc_head_var_list
  123 profunc_head_var_one: . IDENT CLN var_type
  124                     | . IDENT CLN var_type_complex
  125                     | . IDENT COMMA IDENT CLN var_type
  126                     | . IDENT COMMA IDENT CLN var_type_complex
  127                     | . IDENT CLN IDENT

    IDENT  shift, and go to state 102

    profunc_head_var_list  go to state 233
    profunc_head_var_one   go to state 105


State 178

   93 var_decl: ident_list CLN IDENT SEMICLN .

    $default  reduce using rule 93 (var_decl)


State 179

   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL
   98 var_type_complex: KW_ARRAY KW_OF . var_type

    KW_INT      shift, and go to state 107
    KW_REAL     shift, and go to state 108
    KW_CHAR     shift, and go to state 109
    KW_BOOLEAN  shift, and go to state 111

    var_type  go to state 234


State 180

   99 hooks: L_HOOK . POSINT R_HOOK

    POSINT  shift, and go to state 235


State 181

   92 var_decl: ident_list CLN KW_ARRAY hooks . KW_OF var_type SEMICLN
  100 hooks: hooks . L_HOOK POSINT R_HOOK

    KW_OF   shift, and go to state 236
    L_HOOK  shift, and go to state 237


State 182

   90 var_decl: ident_list CLN var_type SEMICLN .

    $default  reduce using rule 90 (var_decl)


State 183

   91 var_decl: ident_list CLN var_type_complex SEMICLN .

    $default  reduce using rule 91 (var_decl)


State 184

  116 profunc_head_pro: KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH .

    $default  reduce using rule 116 (profunc_head_pro)


State 185

  105 type_decl: ident_list EQ KW_FUNCTION L_PARENTH . profunc_head_var R_PARENTH CLN var_type
  119 profunc_head_var: . %empty  [R_PARENTH]
  120                 | . profunc_head_var_list
  121 profunc_head_var_list: . profunc_head_var_one
  122                      | . profunc_head_var_one SEMICLN profunc_head_var_list
  123 profunc_head_var_one: . IDENT CLN var_type
  124                     | . IDENT CLN var_type_complex
  125                     | . IDENT COMMA IDENT CLN var_type
  126                     | . IDENT COMMA IDENT CLN var_type_complex
  127                     | . IDENT CLN IDENT

    IDENT  shift, and go to state 102

    $default  reduce using rule 119 (profunc_head_var)

    profunc_head_var       go to state 238
    profunc_head_var_list  go to state 104
    profunc_head_var_one   go to state 105


State 186

   39 statement_cont: IDENT ASSIGN L_PARENTH var_type . R_PARENTH expression

    R_PARENTH  shift, and go to state 239


State 187

   43 statement_cont: IDENT OP_PLUS ASSIGN expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 43 (statement_cont)


State 188

   44 statement_cont: IDENT OP_MINUS ASSIGN expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 44 (statement_cont)


State 189

   86 table_exp: L_HOOK expression R_HOOK .

    $default  reduce using rule 86 (table_exp)


State 190

   23 profunc_call: IDENT L_PARENTH arguments R_PARENTH .

    $default  reduce using rule 23 (profunc_call)


State 191

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   55 arglist: arglist COMMA . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 240


State 192

   40 statement_cont: IDENT table_exp ASSIGN expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 40 (statement_cont)


State 193

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   45 statement_cont: IDENT table_exp OP_PLUS ASSIGN . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 241


State 194

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   46 statement_cont: IDENT table_exp OP_MINUS ASSIGN . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 242


State 195

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression
   87 table_exp: table_exp L_HOOK expression . R_HOOK

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    R_HOOK       shift, and go to state 243
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157


State 196

   28 for_statement: KW_FOR IDENT ASSIGN expression . KW_TO expression KW_DO statement_cont
   29              | KW_FOR IDENT ASSIGN expression . KW_DOWNTO expression KW_DO statement_cont
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    KW_TO        shift, and go to state 244
    KW_DOWNTO    shift, and go to state 245
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157


State 197

   64 expression: L_PARENTH expression R_PARENTH .

    $default  reduce using rule 64 (expression)


State 198

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   63           | expression KW_NOT expression .  [KW_ELSE, KW_NOT, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, KW_MOD, KW_DIV, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, EXCL_MARK, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    $default  reduce using rule 63 (expression)

    Conflict between rule 63 and token KW_NOT resolved as reduce (%left KW_NOT).
    Conflict between rule 63 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 63 and token OP_PLUS resolved as reduce (OP_PLUS < KW_NOT).
    Conflict between rule 63 and token OP_MINUS resolved as reduce (OP_MINUS < KW_NOT).
    Conflict between rule 63 and token OP_MULT resolved as reduce (OP_MULT < KW_NOT).
    Conflict between rule 63 and token OP_DIV resolved as reduce (OP_DIV < KW_NOT).
    Conflict between rule 63 and token KW_MOD resolved as reduce (KW_MOD < KW_NOT).
    Conflict between rule 63 and token KW_DIV resolved as reduce (KW_DIV < KW_NOT).
    Conflict between rule 63 and token EQ resolved as reduce (EQ < KW_NOT).
    Conflict between rule 63 and token EXCL_MARK resolved as reduce (%left EXCL_MARK).
    Conflict between rule 63 and token CMPR_LESS resolved as reduce (CMPR_LESS < KW_NOT).
    Conflict between rule 63 and token CMPR_LESSEQ resolved as reduce (CMPR_LESSEQ < KW_NOT).
    Conflict between rule 63 and token CMPR_GRTR resolved as reduce (CMPR_GRTR < KW_NOT).
    Conflict between rule 63 and token CMPR_GRTREQ resolved as reduce (CMPR_GRTREQ < KW_NOT).
    Conflict between rule 63 and token CMPR_DIFF resolved as reduce (CMPR_DIFF < KW_NOT).
    Conflict between rule 63 and token OP_AND resolved as reduce (OP_AND < KW_NOT).
    Conflict between rule 63 and token OP_OR resolved as reduce (OP_OR < KW_NOT).
    Conflict between rule 63 and token KW_AND resolved as reduce (KW_AND < KW_NOT).


State 199

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   81           | expression KW_OR expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, SEMICLN, COMMA, R_HOOK, R_PARENTH, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token KW_NOT resolved as shift (KW_OR < KW_NOT).
    Conflict between rule 81 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 81 and token OP_PLUS resolved as shift (KW_OR < OP_PLUS).
    Conflict between rule 81 and token OP_MINUS resolved as shift (KW_OR < OP_MINUS).
    Conflict between rule 81 and token OP_MULT resolved as shift (KW_OR < OP_MULT).
    Conflict between rule 81 and token OP_DIV resolved as shift (KW_OR < OP_DIV).
    Conflict between rule 81 and token KW_MOD resolved as shift (KW_OR < KW_MOD).
    Conflict between rule 81 and token KW_DIV resolved as shift (KW_OR < KW_DIV).
    Conflict between rule 81 and token EQ resolved as shift (KW_OR < EQ).
    Conflict between rule 81 and token EXCL_MARK resolved as shift (KW_OR < EXCL_MARK).
    Conflict between rule 81 and token CMPR_LESS resolved as shift (KW_OR < CMPR_LESS).
    Conflict between rule 81 and token CMPR_LESSEQ resolved as shift (KW_OR < CMPR_LESSEQ).
    Conflict between rule 81 and token CMPR_GRTR resolved as shift (KW_OR < CMPR_GRTR).
    Conflict between rule 81 and token CMPR_GRTREQ resolved as shift (KW_OR < CMPR_GRTREQ).
    Conflict between rule 81 and token CMPR_DIFF resolved as shift (KW_OR < CMPR_DIFF).
    Conflict between rule 81 and token OP_AND resolved as reduce (OP_AND < KW_OR).
    Conflict between rule 81 and token OP_OR resolved as reduce (OP_OR < KW_OR).
    Conflict between rule 81 and token KW_AND resolved as reduce (%left KW_AND).


State 200

   24 if_statement: KW_IF expression KW_THEN statement_cont .

    $default  reduce using rule 24 (if_statement)


State 201

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   71           | expression OP_PLUS expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    OP_MULT    shift, and go to state 144
    OP_DIV     shift, and go to state 145
    KW_MOD     shift, and go to state 146
    KW_DIV     shift, and go to state 147
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 71 (expression)

    Conflict between rule 71 and token KW_NOT resolved as shift (OP_PLUS < KW_NOT).
    Conflict between rule 71 and token KW_OR resolved as reduce (KW_OR < OP_PLUS).
    Conflict between rule 71 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 71 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 71 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).
    Conflict between rule 71 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 71 and token KW_MOD resolved as shift (OP_PLUS < KW_MOD).
    Conflict between rule 71 and token KW_DIV resolved as shift (OP_PLUS < KW_DIV).
    Conflict between rule 71 and token EQ resolved as reduce (EQ < OP_PLUS).
    Conflict between rule 71 and token EXCL_MARK resolved as shift (OP_PLUS < EXCL_MARK).
    Conflict between rule 71 and token CMPR_LESS resolved as reduce (CMPR_LESS < OP_PLUS).
    Conflict between rule 71 and token CMPR_LESSEQ resolved as reduce (CMPR_LESSEQ < OP_PLUS).
    Conflict between rule 71 and token CMPR_GRTR resolved as reduce (CMPR_GRTR < OP_PLUS).
    Conflict between rule 71 and token CMPR_GRTREQ resolved as reduce (CMPR_GRTREQ < OP_PLUS).
    Conflict between rule 71 and token CMPR_DIFF resolved as reduce (CMPR_DIFF < OP_PLUS).
    Conflict between rule 71 and token OP_AND resolved as reduce (OP_AND < OP_PLUS).
    Conflict between rule 71 and token OP_OR resolved as reduce (OP_OR < OP_PLUS).
    Conflict between rule 71 and token KW_AND resolved as reduce (KW_AND < OP_PLUS).


State 202

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   72           | expression OP_MINUS expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    OP_MULT    shift, and go to state 144
    OP_DIV     shift, and go to state 145
    KW_MOD     shift, and go to state 146
    KW_DIV     shift, and go to state 147
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 72 (expression)

    Conflict between rule 72 and token KW_NOT resolved as shift (OP_MINUS < KW_NOT).
    Conflict between rule 72 and token KW_OR resolved as reduce (KW_OR < OP_MINUS).
    Conflict between rule 72 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 72 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 72 and token OP_MULT resolved as shift (OP_MINUS < OP_MULT).
    Conflict between rule 72 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 72 and token KW_MOD resolved as shift (OP_MINUS < KW_MOD).
    Conflict between rule 72 and token KW_DIV resolved as shift (OP_MINUS < KW_DIV).
    Conflict between rule 72 and token EQ resolved as reduce (EQ < OP_MINUS).
    Conflict between rule 72 and token EXCL_MARK resolved as shift (OP_MINUS < EXCL_MARK).
    Conflict between rule 72 and token CMPR_LESS resolved as reduce (CMPR_LESS < OP_MINUS).
    Conflict between rule 72 and token CMPR_LESSEQ resolved as reduce (CMPR_LESSEQ < OP_MINUS).
    Conflict between rule 72 and token CMPR_GRTR resolved as reduce (CMPR_GRTR < OP_MINUS).
    Conflict between rule 72 and token CMPR_GRTREQ resolved as reduce (CMPR_GRTREQ < OP_MINUS).
    Conflict between rule 72 and token CMPR_DIFF resolved as reduce (CMPR_DIFF < OP_MINUS).
    Conflict between rule 72 and token OP_AND resolved as reduce (OP_AND < OP_MINUS).
    Conflict between rule 72 and token OP_OR resolved as reduce (OP_OR < OP_MINUS).
    Conflict between rule 72 and token KW_AND resolved as reduce (KW_AND < OP_MINUS).


State 203

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   65           | expression OP_MULT expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, KW_MOD, KW_DIV, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 65 (expression)

    Conflict between rule 65 and token KW_NOT resolved as shift (OP_MULT < KW_NOT).
    Conflict between rule 65 and token KW_OR resolved as reduce (KW_OR < OP_MULT).
    Conflict between rule 65 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MULT).
    Conflict between rule 65 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MULT).
    Conflict between rule 65 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 65 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 65 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 65 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 65 and token EQ resolved as reduce (EQ < OP_MULT).
    Conflict between rule 65 and token EXCL_MARK resolved as shift (OP_MULT < EXCL_MARK).
    Conflict between rule 65 and token CMPR_LESS resolved as reduce (CMPR_LESS < OP_MULT).
    Conflict between rule 65 and token CMPR_LESSEQ resolved as reduce (CMPR_LESSEQ < OP_MULT).
    Conflict between rule 65 and token CMPR_GRTR resolved as reduce (CMPR_GRTR < OP_MULT).
    Conflict between rule 65 and token CMPR_GRTREQ resolved as reduce (CMPR_GRTREQ < OP_MULT).
    Conflict between rule 65 and token CMPR_DIFF resolved as reduce (CMPR_DIFF < OP_MULT).
    Conflict between rule 65 and token OP_AND resolved as reduce (OP_AND < OP_MULT).
    Conflict between rule 65 and token OP_OR resolved as reduce (OP_OR < OP_MULT).
    Conflict between rule 65 and token KW_AND resolved as reduce (KW_AND < OP_MULT).


State 204

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   66           | expression OP_DIV expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, KW_MOD, KW_DIV, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 66 (expression)

    Conflict between rule 66 and token KW_NOT resolved as shift (OP_DIV < KW_NOT).
    Conflict between rule 66 and token KW_OR resolved as reduce (KW_OR < OP_DIV).
    Conflict between rule 66 and token OP_PLUS resolved as reduce (OP_PLUS < OP_DIV).
    Conflict between rule 66 and token OP_MINUS resolved as reduce (OP_MINUS < OP_DIV).
    Conflict between rule 66 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 66 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 66 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 66 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 66 and token EQ resolved as reduce (EQ < OP_DIV).
    Conflict between rule 66 and token EXCL_MARK resolved as shift (OP_DIV < EXCL_MARK).
    Conflict between rule 66 and token CMPR_LESS resolved as reduce (CMPR_LESS < OP_DIV).
    Conflict between rule 66 and token CMPR_LESSEQ resolved as reduce (CMPR_LESSEQ < OP_DIV).
    Conflict between rule 66 and token CMPR_GRTR resolved as reduce (CMPR_GRTR < OP_DIV).
    Conflict between rule 66 and token CMPR_GRTREQ resolved as reduce (CMPR_GRTREQ < OP_DIV).
    Conflict between rule 66 and token CMPR_DIFF resolved as reduce (CMPR_DIFF < OP_DIV).
    Conflict between rule 66 and token OP_AND resolved as reduce (OP_AND < OP_DIV).
    Conflict between rule 66 and token OP_OR resolved as reduce (OP_OR < OP_DIV).
    Conflict between rule 66 and token KW_AND resolved as reduce (KW_AND < OP_DIV).


State 205

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   68           | expression KW_MOD expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, KW_MOD, KW_DIV, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 68 (expression)

    Conflict between rule 68 and token KW_NOT resolved as shift (KW_MOD < KW_NOT).
    Conflict between rule 68 and token KW_OR resolved as reduce (KW_OR < KW_MOD).
    Conflict between rule 68 and token OP_PLUS resolved as reduce (OP_PLUS < KW_MOD).
    Conflict between rule 68 and token OP_MINUS resolved as reduce (OP_MINUS < KW_MOD).
    Conflict between rule 68 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 68 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 68 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 68 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 68 and token EQ resolved as reduce (EQ < KW_MOD).
    Conflict between rule 68 and token EXCL_MARK resolved as shift (KW_MOD < EXCL_MARK).
    Conflict between rule 68 and token CMPR_LESS resolved as reduce (CMPR_LESS < KW_MOD).
    Conflict between rule 68 and token CMPR_LESSEQ resolved as reduce (CMPR_LESSEQ < KW_MOD).
    Conflict between rule 68 and token CMPR_GRTR resolved as reduce (CMPR_GRTR < KW_MOD).
    Conflict between rule 68 and token CMPR_GRTREQ resolved as reduce (CMPR_GRTREQ < KW_MOD).
    Conflict between rule 68 and token CMPR_DIFF resolved as reduce (CMPR_DIFF < KW_MOD).
    Conflict between rule 68 and token OP_AND resolved as reduce (OP_AND < KW_MOD).
    Conflict between rule 68 and token OP_OR resolved as reduce (OP_OR < KW_MOD).
    Conflict between rule 68 and token KW_AND resolved as reduce (KW_AND < KW_MOD).


State 206

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   67           | expression KW_DIV expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, KW_MOD, KW_DIV, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 67 (expression)

    Conflict between rule 67 and token KW_NOT resolved as shift (KW_DIV < KW_NOT).
    Conflict between rule 67 and token KW_OR resolved as reduce (KW_OR < KW_DIV).
    Conflict between rule 67 and token OP_PLUS resolved as reduce (OP_PLUS < KW_DIV).
    Conflict between rule 67 and token OP_MINUS resolved as reduce (OP_MINUS < KW_DIV).
    Conflict between rule 67 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 67 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 67 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 67 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 67 and token EQ resolved as reduce (EQ < KW_DIV).
    Conflict between rule 67 and token EXCL_MARK resolved as shift (KW_DIV < EXCL_MARK).
    Conflict between rule 67 and token CMPR_LESS resolved as reduce (CMPR_LESS < KW_DIV).
    Conflict between rule 67 and token CMPR_LESSEQ resolved as reduce (CMPR_LESSEQ < KW_DIV).
    Conflict between rule 67 and token CMPR_GRTR resolved as reduce (CMPR_GRTR < KW_DIV).
    Conflict between rule 67 and token CMPR_GRTREQ resolved as reduce (CMPR_GRTREQ < KW_DIV).
    Conflict between rule 67 and token CMPR_DIFF resolved as reduce (CMPR_DIFF < KW_DIV).
    Conflict between rule 67 and token OP_AND resolved as reduce (OP_AND < KW_DIV).
    Conflict between rule 67 and token OP_OR resolved as reduce (OP_OR < KW_DIV).
    Conflict between rule 67 and token KW_AND resolved as reduce (KW_AND < KW_DIV).


State 207

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   73           | expression EQ expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    OP_PLUS    shift, and go to state 142
    OP_MINUS   shift, and go to state 143
    OP_MULT    shift, and go to state 144
    OP_DIV     shift, and go to state 145
    KW_MOD     shift, and go to state 146
    KW_DIV     shift, and go to state 147
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token KW_NOT resolved as shift (EQ < KW_NOT).
    Conflict between rule 73 and token KW_OR resolved as reduce (KW_OR < EQ).
    Conflict between rule 73 and token OP_PLUS resolved as shift (EQ < OP_PLUS).
    Conflict between rule 73 and token OP_MINUS resolved as shift (EQ < OP_MINUS).
    Conflict between rule 73 and token OP_MULT resolved as shift (EQ < OP_MULT).
    Conflict between rule 73 and token OP_DIV resolved as shift (EQ < OP_DIV).
    Conflict between rule 73 and token KW_MOD resolved as shift (EQ < KW_MOD).
    Conflict between rule 73 and token KW_DIV resolved as shift (EQ < KW_DIV).
    Conflict between rule 73 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 73 and token EXCL_MARK resolved as shift (EQ < EXCL_MARK).
    Conflict between rule 73 and token CMPR_LESS resolved as reduce (%left CMPR_LESS).
    Conflict between rule 73 and token CMPR_LESSEQ resolved as reduce (%left CMPR_LESSEQ).
    Conflict between rule 73 and token CMPR_GRTR resolved as reduce (%left CMPR_GRTR).
    Conflict between rule 73 and token CMPR_GRTREQ resolved as reduce (%left CMPR_GRTREQ).
    Conflict between rule 73 and token CMPR_DIFF resolved as reduce (%left CMPR_DIFF).
    Conflict between rule 73 and token OP_AND resolved as reduce (OP_AND < EQ).
    Conflict between rule 73 and token OP_OR resolved as reduce (OP_OR < EQ).
    Conflict between rule 73 and token KW_AND resolved as reduce (KW_AND < EQ).


State 208

   62 expression: expression . EXCL_MARK expression
   62           | expression EXCL_MARK expression .  [KW_ELSE, KW_NOT, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, KW_MOD, KW_DIV, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, EXCL_MARK, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    $default  reduce using rule 62 (expression)

    Conflict between rule 62 and token KW_NOT resolved as reduce (%left KW_NOT).
    Conflict between rule 62 and token KW_OR resolved as reduce (KW_OR < EXCL_MARK).
    Conflict between rule 62 and token OP_PLUS resolved as reduce (OP_PLUS < EXCL_MARK).
    Conflict between rule 62 and token OP_MINUS resolved as reduce (OP_MINUS < EXCL_MARK).
    Conflict between rule 62 and token OP_MULT resolved as reduce (OP_MULT < EXCL_MARK).
    Conflict between rule 62 and token OP_DIV resolved as reduce (OP_DIV < EXCL_MARK).
    Conflict between rule 62 and token KW_MOD resolved as reduce (KW_MOD < EXCL_MARK).
    Conflict between rule 62 and token KW_DIV resolved as reduce (KW_DIV < EXCL_MARK).
    Conflict between rule 62 and token EQ resolved as reduce (EQ < EXCL_MARK).
    Conflict between rule 62 and token EXCL_MARK resolved as reduce (%left EXCL_MARK).
    Conflict between rule 62 and token CMPR_LESS resolved as reduce (CMPR_LESS < EXCL_MARK).
    Conflict between rule 62 and token CMPR_LESSEQ resolved as reduce (CMPR_LESSEQ < EXCL_MARK).
    Conflict between rule 62 and token CMPR_GRTR resolved as reduce (CMPR_GRTR < EXCL_MARK).
    Conflict between rule 62 and token CMPR_GRTREQ resolved as reduce (CMPR_GRTREQ < EXCL_MARK).
    Conflict between rule 62 and token CMPR_DIFF resolved as reduce (CMPR_DIFF < EXCL_MARK).
    Conflict between rule 62 and token OP_AND resolved as reduce (OP_AND < EXCL_MARK).
    Conflict between rule 62 and token OP_OR resolved as reduce (OP_OR < EXCL_MARK).
    Conflict between rule 62 and token KW_AND resolved as reduce (KW_AND < EXCL_MARK).


State 209

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   75           | expression CMPR_LESS expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    OP_PLUS    shift, and go to state 142
    OP_MINUS   shift, and go to state 143
    OP_MULT    shift, and go to state 144
    OP_DIV     shift, and go to state 145
    KW_MOD     shift, and go to state 146
    KW_DIV     shift, and go to state 147
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token KW_NOT resolved as shift (CMPR_LESS < KW_NOT).
    Conflict between rule 75 and token KW_OR resolved as reduce (KW_OR < CMPR_LESS).
    Conflict between rule 75 and token OP_PLUS resolved as shift (CMPR_LESS < OP_PLUS).
    Conflict between rule 75 and token OP_MINUS resolved as shift (CMPR_LESS < OP_MINUS).
    Conflict between rule 75 and token OP_MULT resolved as shift (CMPR_LESS < OP_MULT).
    Conflict between rule 75 and token OP_DIV resolved as shift (CMPR_LESS < OP_DIV).
    Conflict between rule 75 and token KW_MOD resolved as shift (CMPR_LESS < KW_MOD).
    Conflict between rule 75 and token KW_DIV resolved as shift (CMPR_LESS < KW_DIV).
    Conflict between rule 75 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 75 and token EXCL_MARK resolved as shift (CMPR_LESS < EXCL_MARK).
    Conflict between rule 75 and token CMPR_LESS resolved as reduce (%left CMPR_LESS).
    Conflict between rule 75 and token CMPR_LESSEQ resolved as reduce (%left CMPR_LESSEQ).
    Conflict between rule 75 and token CMPR_GRTR resolved as reduce (%left CMPR_GRTR).
    Conflict between rule 75 and token CMPR_GRTREQ resolved as reduce (%left CMPR_GRTREQ).
    Conflict between rule 75 and token CMPR_DIFF resolved as reduce (%left CMPR_DIFF).
    Conflict between rule 75 and token OP_AND resolved as reduce (OP_AND < CMPR_LESS).
    Conflict between rule 75 and token OP_OR resolved as reduce (OP_OR < CMPR_LESS).
    Conflict between rule 75 and token KW_AND resolved as reduce (KW_AND < CMPR_LESS).


State 210

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   76           | expression CMPR_LESSEQ expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    OP_PLUS    shift, and go to state 142
    OP_MINUS   shift, and go to state 143
    OP_MULT    shift, and go to state 144
    OP_DIV     shift, and go to state 145
    KW_MOD     shift, and go to state 146
    KW_DIV     shift, and go to state 147
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token KW_NOT resolved as shift (CMPR_LESSEQ < KW_NOT).
    Conflict between rule 76 and token KW_OR resolved as reduce (KW_OR < CMPR_LESSEQ).
    Conflict between rule 76 and token OP_PLUS resolved as shift (CMPR_LESSEQ < OP_PLUS).
    Conflict between rule 76 and token OP_MINUS resolved as shift (CMPR_LESSEQ < OP_MINUS).
    Conflict between rule 76 and token OP_MULT resolved as shift (CMPR_LESSEQ < OP_MULT).
    Conflict between rule 76 and token OP_DIV resolved as shift (CMPR_LESSEQ < OP_DIV).
    Conflict between rule 76 and token KW_MOD resolved as shift (CMPR_LESSEQ < KW_MOD).
    Conflict between rule 76 and token KW_DIV resolved as shift (CMPR_LESSEQ < KW_DIV).
    Conflict between rule 76 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 76 and token EXCL_MARK resolved as shift (CMPR_LESSEQ < EXCL_MARK).
    Conflict between rule 76 and token CMPR_LESS resolved as reduce (%left CMPR_LESS).
    Conflict between rule 76 and token CMPR_LESSEQ resolved as reduce (%left CMPR_LESSEQ).
    Conflict between rule 76 and token CMPR_GRTR resolved as reduce (%left CMPR_GRTR).
    Conflict between rule 76 and token CMPR_GRTREQ resolved as reduce (%left CMPR_GRTREQ).
    Conflict between rule 76 and token CMPR_DIFF resolved as reduce (%left CMPR_DIFF).
    Conflict between rule 76 and token OP_AND resolved as reduce (OP_AND < CMPR_LESSEQ).
    Conflict between rule 76 and token OP_OR resolved as reduce (OP_OR < CMPR_LESSEQ).
    Conflict between rule 76 and token KW_AND resolved as reduce (KW_AND < CMPR_LESSEQ).


State 211

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   77           | expression CMPR_GRTR expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    OP_PLUS    shift, and go to state 142
    OP_MINUS   shift, and go to state 143
    OP_MULT    shift, and go to state 144
    OP_DIV     shift, and go to state 145
    KW_MOD     shift, and go to state 146
    KW_DIV     shift, and go to state 147
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token KW_NOT resolved as shift (CMPR_GRTR < KW_NOT).
    Conflict between rule 77 and token KW_OR resolved as reduce (KW_OR < CMPR_GRTR).
    Conflict between rule 77 and token OP_PLUS resolved as shift (CMPR_GRTR < OP_PLUS).
    Conflict between rule 77 and token OP_MINUS resolved as shift (CMPR_GRTR < OP_MINUS).
    Conflict between rule 77 and token OP_MULT resolved as shift (CMPR_GRTR < OP_MULT).
    Conflict between rule 77 and token OP_DIV resolved as shift (CMPR_GRTR < OP_DIV).
    Conflict between rule 77 and token KW_MOD resolved as shift (CMPR_GRTR < KW_MOD).
    Conflict between rule 77 and token KW_DIV resolved as shift (CMPR_GRTR < KW_DIV).
    Conflict between rule 77 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 77 and token EXCL_MARK resolved as shift (CMPR_GRTR < EXCL_MARK).
    Conflict between rule 77 and token CMPR_LESS resolved as reduce (%left CMPR_LESS).
    Conflict between rule 77 and token CMPR_LESSEQ resolved as reduce (%left CMPR_LESSEQ).
    Conflict between rule 77 and token CMPR_GRTR resolved as reduce (%left CMPR_GRTR).
    Conflict between rule 77 and token CMPR_GRTREQ resolved as reduce (%left CMPR_GRTREQ).
    Conflict between rule 77 and token CMPR_DIFF resolved as reduce (%left CMPR_DIFF).
    Conflict between rule 77 and token OP_AND resolved as reduce (OP_AND < CMPR_GRTR).
    Conflict between rule 77 and token OP_OR resolved as reduce (OP_OR < CMPR_GRTR).
    Conflict between rule 77 and token KW_AND resolved as reduce (KW_AND < CMPR_GRTR).


State 212

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   78           | expression CMPR_GRTREQ expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    OP_PLUS    shift, and go to state 142
    OP_MINUS   shift, and go to state 143
    OP_MULT    shift, and go to state 144
    OP_DIV     shift, and go to state 145
    KW_MOD     shift, and go to state 146
    KW_DIV     shift, and go to state 147
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token KW_NOT resolved as shift (CMPR_GRTREQ < KW_NOT).
    Conflict between rule 78 and token KW_OR resolved as reduce (KW_OR < CMPR_GRTREQ).
    Conflict between rule 78 and token OP_PLUS resolved as shift (CMPR_GRTREQ < OP_PLUS).
    Conflict between rule 78 and token OP_MINUS resolved as shift (CMPR_GRTREQ < OP_MINUS).
    Conflict between rule 78 and token OP_MULT resolved as shift (CMPR_GRTREQ < OP_MULT).
    Conflict between rule 78 and token OP_DIV resolved as shift (CMPR_GRTREQ < OP_DIV).
    Conflict between rule 78 and token KW_MOD resolved as shift (CMPR_GRTREQ < KW_MOD).
    Conflict between rule 78 and token KW_DIV resolved as shift (CMPR_GRTREQ < KW_DIV).
    Conflict between rule 78 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 78 and token EXCL_MARK resolved as shift (CMPR_GRTREQ < EXCL_MARK).
    Conflict between rule 78 and token CMPR_LESS resolved as reduce (%left CMPR_LESS).
    Conflict between rule 78 and token CMPR_LESSEQ resolved as reduce (%left CMPR_LESSEQ).
    Conflict between rule 78 and token CMPR_GRTR resolved as reduce (%left CMPR_GRTR).
    Conflict between rule 78 and token CMPR_GRTREQ resolved as reduce (%left CMPR_GRTREQ).
    Conflict between rule 78 and token CMPR_DIFF resolved as reduce (%left CMPR_DIFF).
    Conflict between rule 78 and token OP_AND resolved as reduce (OP_AND < CMPR_GRTREQ).
    Conflict between rule 78 and token OP_OR resolved as reduce (OP_OR < CMPR_GRTREQ).
    Conflict between rule 78 and token KW_AND resolved as reduce (KW_AND < CMPR_GRTREQ).


State 213

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   74           | expression CMPR_DIFF expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, SEMICLN, EQ, COMMA, R_HOOK, R_PARENTH, CMPR_LESS, CMPR_LESSEQ, CMPR_GRTR, CMPR_GRTREQ, CMPR_DIFF, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT     shift, and go to state 139
    OP_PLUS    shift, and go to state 142
    OP_MINUS   shift, and go to state 143
    OP_MULT    shift, and go to state 144
    OP_DIV     shift, and go to state 145
    KW_MOD     shift, and go to state 146
    KW_DIV     shift, and go to state 147
    EXCL_MARK  shift, and go to state 149

    $default  reduce using rule 74 (expression)

    Conflict between rule 74 and token KW_NOT resolved as shift (CMPR_DIFF < KW_NOT).
    Conflict between rule 74 and token KW_OR resolved as reduce (KW_OR < CMPR_DIFF).
    Conflict between rule 74 and token OP_PLUS resolved as shift (CMPR_DIFF < OP_PLUS).
    Conflict between rule 74 and token OP_MINUS resolved as shift (CMPR_DIFF < OP_MINUS).
    Conflict between rule 74 and token OP_MULT resolved as shift (CMPR_DIFF < OP_MULT).
    Conflict between rule 74 and token OP_DIV resolved as shift (CMPR_DIFF < OP_DIV).
    Conflict between rule 74 and token KW_MOD resolved as shift (CMPR_DIFF < KW_MOD).
    Conflict between rule 74 and token KW_DIV resolved as shift (CMPR_DIFF < KW_DIV).
    Conflict between rule 74 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 74 and token EXCL_MARK resolved as shift (CMPR_DIFF < EXCL_MARK).
    Conflict between rule 74 and token CMPR_LESS resolved as reduce (%left CMPR_LESS).
    Conflict between rule 74 and token CMPR_LESSEQ resolved as reduce (%left CMPR_LESSEQ).
    Conflict between rule 74 and token CMPR_GRTR resolved as reduce (%left CMPR_GRTR).
    Conflict between rule 74 and token CMPR_GRTREQ resolved as reduce (%left CMPR_GRTREQ).
    Conflict between rule 74 and token CMPR_DIFF resolved as reduce (%left CMPR_DIFF).
    Conflict between rule 74 and token OP_AND resolved as reduce (OP_AND < CMPR_DIFF).
    Conflict between rule 74 and token OP_OR resolved as reduce (OP_OR < CMPR_DIFF).
    Conflict between rule 74 and token KW_AND resolved as reduce (KW_AND < CMPR_DIFF).


State 214

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   80           | expression OP_AND expression .  [KW_ELSE, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, SEMICLN, COMMA, R_HOOK, R_PARENTH, OP_AND, OP_OR, KW_DO, KW_END]
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    KW_AND       shift, and go to state 157

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token KW_NOT resolved as shift (OP_AND < KW_NOT).
    Conflict between rule 80 and token KW_OR resolved as shift (OP_AND < KW_OR).
    Conflict between rule 80 and token OP_PLUS resolved as shift (OP_AND < OP_PLUS).
    Conflict between rule 80 and token OP_MINUS resolved as shift (OP_AND < OP_MINUS).
    Conflict between rule 80 and token OP_MULT resolved as shift (OP_AND < OP_MULT).
    Conflict between rule 80 and token OP_DIV resolved as shift (OP_AND < OP_DIV).
    Conflict between rule 80 and token KW_MOD resolved as shift (OP_AND < KW_MOD).
    Conflict between rule 80 and token KW_DIV resolved as shift (OP_AND < KW_DIV).
    Conflict between rule 80 and token EQ resolved as shift (OP_AND < EQ).
    Conflict between rule 80 and token EXCL_MARK resolved as shift (OP_AND < EXCL_MARK).
    Conflict between rule 80 and token CMPR_LESS resolved as shift (OP_AND < CMPR_LESS).
    Conflict between rule 80 and token CMPR_LESSEQ resolved as shift (OP_AND < CMPR_LESSEQ).
    Conflict between rule 80 and token CMPR_GRTR resolved as shift (OP_AND < CMPR_GRTR).
    Conflict between rule 80 and token CMPR_GRTREQ resolved as shift (OP_AND < CMPR_GRTREQ).
    Conflict between rule 80 and token CMPR_DIFF resolved as shift (OP_AND < CMPR_DIFF).
    Conflict between rule 80 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 80 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 80 and token KW_AND resolved as shift (OP_AND < KW_AND).


State 215

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression
   82           | expression OP_OR expression .  [KW_ELSE, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, SEMICLN, COMMA, R_HOOK, R_PARENTH, OP_AND, OP_OR, KW_DO, KW_END]

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    KW_AND       shift, and go to state 157

    $default  reduce using rule 82 (expression)

    Conflict between rule 82 and token KW_NOT resolved as shift (OP_OR < KW_NOT).
    Conflict between rule 82 and token KW_OR resolved as shift (OP_OR < KW_OR).
    Conflict between rule 82 and token OP_PLUS resolved as shift (OP_OR < OP_PLUS).
    Conflict between rule 82 and token OP_MINUS resolved as shift (OP_OR < OP_MINUS).
    Conflict between rule 82 and token OP_MULT resolved as shift (OP_OR < OP_MULT).
    Conflict between rule 82 and token OP_DIV resolved as shift (OP_OR < OP_DIV).
    Conflict between rule 82 and token KW_MOD resolved as shift (OP_OR < KW_MOD).
    Conflict between rule 82 and token KW_DIV resolved as shift (OP_OR < KW_DIV).
    Conflict between rule 82 and token EQ resolved as shift (OP_OR < EQ).
    Conflict between rule 82 and token EXCL_MARK resolved as shift (OP_OR < EXCL_MARK).
    Conflict between rule 82 and token CMPR_LESS resolved as shift (OP_OR < CMPR_LESS).
    Conflict between rule 82 and token CMPR_LESSEQ resolved as shift (OP_OR < CMPR_LESSEQ).
    Conflict between rule 82 and token CMPR_GRTR resolved as shift (OP_OR < CMPR_GRTR).
    Conflict between rule 82 and token CMPR_GRTREQ resolved as shift (OP_OR < CMPR_GRTREQ).
    Conflict between rule 82 and token CMPR_DIFF resolved as shift (OP_OR < CMPR_DIFF).
    Conflict between rule 82 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 82 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 82 and token KW_AND resolved as shift (OP_OR < KW_AND).


State 216

   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   79           | expression KW_AND expression .  [KW_ELSE, KW_OR, KW_TO, KW_THEN, KW_UNTIL, KW_DOWNTO, SEMICLN, COMMA, R_HOOK, R_PARENTH, OP_AND, OP_OR, KW_DO, KW_END, KW_AND]
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token KW_NOT resolved as shift (KW_AND < KW_NOT).
    Conflict between rule 79 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 79 and token OP_PLUS resolved as shift (KW_AND < OP_PLUS).
    Conflict between rule 79 and token OP_MINUS resolved as shift (KW_AND < OP_MINUS).
    Conflict between rule 79 and token OP_MULT resolved as shift (KW_AND < OP_MULT).
    Conflict between rule 79 and token OP_DIV resolved as shift (KW_AND < OP_DIV).
    Conflict between rule 79 and token KW_MOD resolved as shift (KW_AND < KW_MOD).
    Conflict between rule 79 and token KW_DIV resolved as shift (KW_AND < KW_DIV).
    Conflict between rule 79 and token EQ resolved as shift (KW_AND < EQ).
    Conflict between rule 79 and token EXCL_MARK resolved as shift (KW_AND < EXCL_MARK).
    Conflict between rule 79 and token CMPR_LESS resolved as shift (KW_AND < CMPR_LESS).
    Conflict between rule 79 and token CMPR_LESSEQ resolved as shift (KW_AND < CMPR_LESSEQ).
    Conflict between rule 79 and token CMPR_GRTR resolved as shift (KW_AND < CMPR_GRTR).
    Conflict between rule 79 and token CMPR_GRTREQ resolved as shift (KW_AND < CMPR_GRTREQ).
    Conflict between rule 79 and token CMPR_DIFF resolved as shift (KW_AND < CMPR_DIFF).
    Conflict between rule 79 and token OP_AND resolved as reduce (OP_AND < KW_AND).
    Conflict between rule 79 and token OP_OR resolved as reduce (OP_OR < KW_AND).
    Conflict between rule 79 and token KW_AND resolved as reduce (%left KW_AND).


State 217

   30 while_statement: KW_WHILE expression KW_DO statement_cont .

    $default  reduce using rule 30 (while_statement)


State 218

   31 repeat_statement: KW_REPEAT statement_cont KW_UNTIL expression .  [SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 31 (repeat_statement)


State 219

   37 statement_cont: KW_RESULT ASSIGN L_PARENTH var_type . R_PARENTH expression

    R_PARENTH  shift, and go to state 246


State 220

   41 statement_cont: KW_RESULT OP_PLUS ASSIGN expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 41 (statement_cont)


State 221

   42 statement_cont: KW_RESULT OP_MINUS ASSIGN expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 42 (statement_cont)


State 222

   27 else_statement: KW_ELSE KW_IF expression . KW_THEN statement_cont
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    KW_THEN      shift, and go to state 247
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157


State 223

    6 main_body: body_decl KW_BEGIN statements KW_END body_decl .  [DOT]
    8 body_decl: body_decl . body_d
    9 body_d: . type_decl_section
   10       | . var_decl_section
   11       | . profunc SEMICLN
   88 var_decl_section: . KW_VAR var_decl
   89                 | . var_decl_section var_decl
  101 type_decl_section: . KW_TYPE type_decl SEMICLN
  102                  | . type_decl_section type_decl SEMICLN
  108 profunc: . profunc_head_pro SEMICLN
  109        | . profunc_head_func SEMICLN
  110        | . profunc_head_pro SEMICLN KW_BEGIN statements KW_END
  111        | . profunc_head_func SEMICLN KW_BEGIN statements KW_END
  112        | . profunc_head_pro SEMICLN body_decl
  113        | . profunc_head_func SEMICLN body_decl
  114        | . profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END
  115        | . profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END
  116 profunc_head_pro: . KW_PROCEDURE IDENT L_PARENTH profunc_head_var R_PARENTH
  117 profunc_head_func: . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type
  118                  | . KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex

    KW_FUNCTION   shift, and go to state 6
    KW_VAR        shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_TYPE       shift, and go to state 9

    $default  reduce using rule 6 (main_body)

    body_d             go to state 51
    var_decl_section   go to state 14
    type_decl_section  go to state 15
    profunc            go to state 16
    profunc_head_pro   go to state 17
    profunc_head_func  go to state 18


State 224

  110 profunc: profunc_head_pro SEMICLN KW_BEGIN statements KW_END .

    $default  reduce using rule 110 (profunc)


State 225

  114 profunc: profunc_head_pro SEMICLN body_decl KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 248


State 226

  111 profunc: profunc_head_func SEMICLN KW_BEGIN statements KW_END .

    $default  reduce using rule 111 (profunc)


State 227

  115 profunc: profunc_head_func SEMICLN body_decl KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 249


State 228

  127 profunc_head_var_one: IDENT CLN IDENT .

    $default  reduce using rule 127 (profunc_head_var_one)


State 229

  123 profunc_head_var_one: IDENT CLN var_type .

    $default  reduce using rule 123 (profunc_head_var_one)


State 230

  124 profunc_head_var_one: IDENT CLN var_type_complex .

    $default  reduce using rule 124 (profunc_head_var_one)


State 231

  125 profunc_head_var_one: IDENT COMMA IDENT . CLN var_type
  126                     | IDENT COMMA IDENT . CLN var_type_complex

    CLN  shift, and go to state 250


State 232

   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL
   98 var_type_complex: . KW_ARRAY KW_OF var_type
  117 profunc_head_func: KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN . var_type
  118                  | KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN . var_type_complex

    KW_INT      shift, and go to state 107
    KW_REAL     shift, and go to state 108
    KW_CHAR     shift, and go to state 109
    KW_ARRAY    shift, and go to state 117
    KW_BOOLEAN  shift, and go to state 111

    var_type          go to state 251
    var_type_complex  go to state 252


State 233

  122 profunc_head_var_list: profunc_head_var_one SEMICLN profunc_head_var_list .

    $default  reduce using rule 122 (profunc_head_var_list)


State 234

   98 var_type_complex: KW_ARRAY KW_OF var_type .

    $default  reduce using rule 98 (var_type_complex)


State 235

   99 hooks: L_HOOK POSINT . R_HOOK

    R_HOOK  shift, and go to state 253


State 236

   92 var_decl: ident_list CLN KW_ARRAY hooks KW_OF . var_type SEMICLN
   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL

    KW_INT      shift, and go to state 107
    KW_REAL     shift, and go to state 108
    KW_CHAR     shift, and go to state 109
    KW_BOOLEAN  shift, and go to state 111

    var_type  go to state 254


State 237

  100 hooks: hooks L_HOOK . POSINT R_HOOK

    POSINT  shift, and go to state 255


State 238

  105 type_decl: ident_list EQ KW_FUNCTION L_PARENTH profunc_head_var . R_PARENTH CLN var_type

    R_PARENTH  shift, and go to state 256


State 239

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   39 statement_cont: IDENT ASSIGN L_PARENTH var_type R_PARENTH . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 257


State 240

   55 arglist: arglist COMMA expression .  [COMMA, R_PARENTH]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 55 (arglist)


State 241

   45 statement_cont: IDENT table_exp OP_PLUS ASSIGN expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 45 (statement_cont)


State 242

   46 statement_cont: IDENT table_exp OP_MINUS ASSIGN expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 46 (statement_cont)


State 243

   87 table_exp: table_exp L_HOOK expression R_HOOK .

    $default  reduce using rule 87 (table_exp)


State 244

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO . expression KW_DO statement_cont
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 258


State 245

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   29 for_statement: KW_FOR IDENT ASSIGN expression KW_DOWNTO . expression KW_DO statement_cont
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 259


State 246

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   37 statement_cont: KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH . expression
   56 expression: . POSINT
   57           | . REAL
   58           | . IDENT
   59           | . IDENT table_exp
   60           | . KW_RESULT
   61           | . profunc_call
   62           | . expression EXCL_MARK expression
   63           | . expression KW_NOT expression
   64           | . L_PARENTH expression R_PARENTH
   65           | . expression OP_MULT expression
   66           | . expression OP_DIV expression
   67           | . expression KW_DIV expression
   68           | . expression KW_MOD expression
   69           | . OP_PLUS expression
   70           | . OP_MINUS expression
   71           | . expression OP_PLUS expression
   72           | . expression OP_MINUS expression
   73           | . expression EQ expression
   74           | . expression CMPR_DIFF expression
   75           | . expression CMPR_LESS expression
   76           | . expression CMPR_LESSEQ expression
   77           | . expression CMPR_GRTR expression
   78           | . expression CMPR_GRTREQ expression
   79           | . expression KW_AND expression
   80           | . expression OP_AND expression
   81           | . expression KW_OR expression
   82           | . expression OP_OR expression
   83           | . BOOL_FALSE
   84           | . BOOL_TRUE
   85           | . STRING

    IDENT       shift, and go to state 72
    POSINT      shift, and go to state 73
    REAL        shift, and go to state 74
    STRING      shift, and go to state 75
    KW_RESULT   shift, and go to state 76
    OP_PLUS     shift, and go to state 77
    OP_MINUS    shift, and go to state 78
    L_PARENTH   shift, and go to state 79
    BOOL_TRUE   shift, and go to state 80
    BOOL_FALSE  shift, and go to state 81

    profunc_call  go to state 82
    expression    go to state 260


State 247

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   27 else_statement: KW_ELSE KW_IF expression KW_THEN . statement_cont
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 85
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    profunc_call    go to state 41
    statement_cont  go to state 261


State 248

  114 profunc: profunc_head_pro SEMICLN body_decl KW_BEGIN statements KW_END .

    $default  reduce using rule 114 (profunc)


State 249

  115 profunc: profunc_head_func SEMICLN body_decl KW_BEGIN statements KW_END .

    $default  reduce using rule 115 (profunc)


State 250

   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL
   98 var_type_complex: . KW_ARRAY KW_OF var_type
  125 profunc_head_var_one: IDENT COMMA IDENT CLN . var_type
  126                     | IDENT COMMA IDENT CLN . var_type_complex

    KW_INT      shift, and go to state 107
    KW_REAL     shift, and go to state 108
    KW_CHAR     shift, and go to state 109
    KW_ARRAY    shift, and go to state 117
    KW_BOOLEAN  shift, and go to state 111

    var_type          go to state 262
    var_type_complex  go to state 263


State 251

  117 profunc_head_func: KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type .

    $default  reduce using rule 117 (profunc_head_func)


State 252

  118 profunc_head_func: KW_FUNCTION IDENT L_PARENTH profunc_head_var R_PARENTH CLN var_type_complex .

    $default  reduce using rule 118 (profunc_head_func)


State 253

   99 hooks: L_HOOK POSINT R_HOOK .

    $default  reduce using rule 99 (hooks)


State 254

   92 var_decl: ident_list CLN KW_ARRAY hooks KW_OF var_type . SEMICLN

    SEMICLN  shift, and go to state 264


State 255

  100 hooks: hooks L_HOOK POSINT . R_HOOK

    R_HOOK  shift, and go to state 265


State 256

  105 type_decl: ident_list EQ KW_FUNCTION L_PARENTH profunc_head_var R_PARENTH . CLN var_type

    CLN  shift, and go to state 266


State 257

   39 statement_cont: IDENT ASSIGN L_PARENTH var_type R_PARENTH expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 39 (statement_cont)


State 258

   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO expression . KW_DO statement_cont
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_DO        shift, and go to state 267
    KW_AND       shift, and go to state 157


State 259

   29 for_statement: KW_FOR IDENT ASSIGN expression KW_DOWNTO expression . KW_DO statement_cont
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_DO        shift, and go to state 268
    KW_AND       shift, and go to state 157


State 260

   37 statement_cont: KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression .  [KW_ELSE, KW_UNTIL, SEMICLN, KW_END]
   62 expression: expression . EXCL_MARK expression
   63           | expression . KW_NOT expression
   65           | expression . OP_MULT expression
   66           | expression . OP_DIV expression
   67           | expression . KW_DIV expression
   68           | expression . KW_MOD expression
   71           | expression . OP_PLUS expression
   72           | expression . OP_MINUS expression
   73           | expression . EQ expression
   74           | expression . CMPR_DIFF expression
   75           | expression . CMPR_LESS expression
   76           | expression . CMPR_LESSEQ expression
   77           | expression . CMPR_GRTR expression
   78           | expression . CMPR_GRTREQ expression
   79           | expression . KW_AND expression
   80           | expression . OP_AND expression
   81           | expression . KW_OR expression
   82           | expression . OP_OR expression

    KW_NOT       shift, and go to state 139
    KW_OR        shift, and go to state 140
    OP_PLUS      shift, and go to state 142
    OP_MINUS     shift, and go to state 143
    OP_MULT      shift, and go to state 144
    OP_DIV       shift, and go to state 145
    KW_MOD       shift, and go to state 146
    KW_DIV       shift, and go to state 147
    EQ           shift, and go to state 148
    EXCL_MARK    shift, and go to state 149
    CMPR_LESS    shift, and go to state 150
    CMPR_LESSEQ  shift, and go to state 151
    CMPR_GRTR    shift, and go to state 152
    CMPR_GRTREQ  shift, and go to state 153
    CMPR_DIFF    shift, and go to state 154
    OP_AND       shift, and go to state 155
    OP_OR        shift, and go to state 156
    KW_AND       shift, and go to state 157

    $default  reduce using rule 37 (statement_cont)


State 261

   27 else_statement: KW_ELSE KW_IF expression KW_THEN statement_cont .

    $default  reduce using rule 27 (else_statement)


State 262

  125 profunc_head_var_one: IDENT COMMA IDENT CLN var_type .

    $default  reduce using rule 125 (profunc_head_var_one)


State 263

  126 profunc_head_var_one: IDENT COMMA IDENT CLN var_type_complex .

    $default  reduce using rule 126 (profunc_head_var_one)


State 264

   92 var_decl: ident_list CLN KW_ARRAY hooks KW_OF var_type SEMICLN .

    $default  reduce using rule 92 (var_decl)


State 265

  100 hooks: hooks L_HOOK POSINT R_HOOK .

    $default  reduce using rule 100 (hooks)


State 266

   94 var_type: . KW_INT
   95         | . KW_BOOLEAN
   96         | . KW_CHAR
   97         | . KW_REAL
  105 type_decl: ident_list EQ KW_FUNCTION L_PARENTH profunc_head_var R_PARENTH CLN . var_type

    KW_INT      shift, and go to state 107
    KW_REAL     shift, and go to state 108
    KW_CHAR     shift, and go to state 109
    KW_BOOLEAN  shift, and go to state 111

    var_type  go to state 269


State 267

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO . statement_cont
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 85
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    profunc_call    go to state 41
    statement_cont  go to state 270


State 268

   23 profunc_call: . IDENT L_PARENTH arguments R_PARENTH
   29 for_statement: KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO . statement_cont
   34 statement_cont: . KW_RETURN
   35               | . KW_RETURN expression
   36               | . KW_RESULT ASSIGN expression
   37               | . KW_RESULT ASSIGN L_PARENTH var_type R_PARENTH expression
   38               | . IDENT ASSIGN expression
   39               | . IDENT ASSIGN L_PARENTH var_type R_PARENTH expression
   40               | . IDENT table_exp ASSIGN expression
   41               | . KW_RESULT OP_PLUS ASSIGN expression
   42               | . KW_RESULT OP_MINUS ASSIGN expression
   43               | . IDENT OP_PLUS ASSIGN expression
   44               | . IDENT OP_MINUS ASSIGN expression
   45               | . IDENT table_exp OP_PLUS ASSIGN expression
   46               | . IDENT table_exp OP_MINUS ASSIGN expression
   47               | . KW_BREAK
   48               | . KW_CONTINUE
   49               | . profunc_call
   50               | . KW_BEGIN statement_list KW_END

    IDENT        shift, and go to state 85
    KW_RESULT    shift, and go to state 33
    KW_RETURN    shift, and go to state 34
    KW_BREAK     shift, and go to state 35
    KW_CONTINUE  shift, and go to state 36
    KW_BEGIN     shift, and go to state 37

    profunc_call    go to state 41
    statement_cont  go to state 271


State 269

  105 type_decl: ident_list EQ KW_FUNCTION L_PARENTH profunc_head_var R_PARENTH CLN var_type .

    $default  reduce using rule 105 (type_decl)


State 270

   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement_cont .

    $default  reduce using rule 28 (for_statement)


State 271

   29 for_statement: KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement_cont .

    $default  reduce using rule 29 (for_statement)
